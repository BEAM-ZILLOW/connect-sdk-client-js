{"version":3,"sources":["core.js","promise.js","net.js","util.js","AndroidPay.js","PublicKeyResponse.js","PaymentProductPublicKeyResponse.js","C2SCommunicatorConfiguration.js","IinDetailsResponse.js","C2SCommunicator.js","LabelTemplateElement.js","Attribute.js","AccountOnFileDisplayHints.js","AccountOnFile.js","PaymentProductDisplayHints.js","BasicPaymentProduct.js","BasicPaymentProductGroup.js","MaskedString.js","MaskingUtil.js","ValidationRuleLuhn.js","ValidationRuleExpirationDate.js","ValidationRuleFixedList.js","ValidationRuleLength.js","ValidationRuleRange.js","ValidationRuleRegularExpression.js","ValidationRuleEmailAddress.js","ValidationRuleBoletoBancarioRequiredness.js","ValidationRuleFactory.js","DataRestrictions.js","ValueMappingElement.js","FormElement.js","Tooltip.js","PaymentProductFieldDisplayHints.js","PaymentProductField.js","PaymentProduct.js","PaymentProductGroup.js","BasicPaymentProducts.js","BasicPaymentProductGroups.js","BasicPaymentItems.js","PaymentRequest.js","C2SPaymentProductContext.js","JOSEEncryptor.js","Encryptor.js","session.js"],"names":["global","connectsdk","modules","define","module","dependencies","fn","length","i","apply","this","exports","window","turing","Promise","singleton","self","pending","resolve","result","complete","reject","isSingleton","prototype","then","success","failure","push","type","shift","xhr","XMLHttpRequest","location","protocol","ActiveXObject","e","successfulRequest","request","status","responseText","ajax","url","options","respondToReadyState","readyState","contentType","mimeType","getResponseHeader","response","test","responseJSON","net","parseJSON","responseXML","parseXML","callback","promise","error","setHeaders","defaults","Accept","Content-Type","name","headers","hasOwnProperty","setRequestHeader","send","postBody","chain","method","toLowerCase","asynchronous","onreadystatechange","open","serialize","set","key","value","data","end","arguments","JSONPCallback","runCallback","json","teardown","methodName","parseInt","Date","getTime","trim","s","replace","object","results","encodeURIComponent","join","string","JSON","parse","DOMParser","text","parseFromString","xml","async","loadXML","run","scriptTag","document","createElement","id","src","that","onerror","body","appendChild","removeChild","get","post","jsonp","Util","createInstance","applePayPaymentProductId","androidPayPaymentProductId","getMetadata","screenSize","innerWidth","innerHeight","platformIdentifier","navigator","userAgent","sdkIdentifier","GC","rppEnabledPage","sdkCreator","base64Encode","stringify","o1","o2","o3","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","slice","filterOutProductsThatAreNotSupportedInThisBrowser","paymentProducts","product","paymentProductsThatAreNotSupportedInThisBrowser","indexOf","splice","instance","getInstance","_util","_C2SCommunicator","_paymentProductSpecificInputs","_context","setupRequestMethodData","networks","publicKey","androidPayEnvironment","environment","supportedMethods","merchantId","androidPay","allowedCardNetworks","paymentMethodTokenizationParameters","tokenizationType","parameters","setupRequestDetails","total","label","amount","currency","totalAmount","toFixed","setupRequestOptions","requestShipping","requestPayerEmail","requestPayerPhone","requestPayerName","_doCanMakePayment","jsonNetworks","jsonPublicKey","methodData","details","PaymentRequest","setTimeout","canMakePayment","catch","_checkPaymentProductPublicKey","getPaymentProductPublicKey","_checkPaymentProductNetworks","getPaymentProductNetworks","_isPaymentRequestAPIAvailable","AndroidPay","C2SCommunicator","isAndroidPayAvailable","context","paymentProductSpecificInputs","isMerchantIdProvided","PublicKeyResponse","keyId","PaymentProductPublicKeyResponse","C2SCommunicatorConfiguration","sessionDetails","endpoints","PROD","EU","API","ASSETS","US","PREPROD","SANDBOX","INTEGRATION","DEV_NAMI","DEV_ISC","region","clientSessionId","clientSessionID","customerId","apiBaseUrl","assetsBaseUrl","IinDetailsResponse","countryCode","paymentProductId","isAllowedInContext","coBrands","Net","c2SCommunicatorConfiguration","paymentProduct","_c2SCommunicatorConfiguration","_cache","_providedPaymentProduct","_AndroidPay","_mapType","expirydate","numericstring","integer","expirationDate","_cleanJSON","il","fields","field","displayHints","validatorKey","dataRestrictions","validators","formElement","list","tooltip","image","sort","a","b","displayOrder","logo","_extendLogoUrl","postfix","_isPaymentProductInList","metadata","getBasicPaymentProducts","cacheBust","cacheKey","locale","isRecurring","res","console","warn","getBasicPaymentProductGroups","getPaymentProduct","errorId","errors","code","propertyName","message","httpStatusCode","cleanedJSON","getPaymentProductGroup","paymentProductGroupId","getPaymentProductIdByCreditCardNumber","partialCreditCardNumber","iinDetailsResponse","convertContextToIinDetailsContext","bin","paymentContext","amountOfMoney","currencyCode","getPublicKey","publicKeyResponse","paymentProductPublicKeyResponse","getPaymentProductDirectory","convertAmount","source","target","LabelTemplateElement","attributeKey","mask","wildcardMask","Attribute","mustWriteReason","_parseJSON","_json","_labelTemplate","_labelTemplateElementByAttributeKey","labelTemplate","l","labelTemplateElement","AccountOnFileDisplayHints","labelTemplateElementByAttributeKey","_attributes","_attributeByKey","attributes","attribute","AccountOnFile","attributeByKey","getMaskedValueByAttributeKey","undefined","MaskingUtil","applyMask","PaymentProductDisplayHints","_accountsOnFile","_accountOnFileById","accountsOnFile","accountOnFile","BasicPaymentProduct","accountOnFileById","allowsRecurring","allowsTokenization","autoTokenized","maxAmount","minAmount","paymentMethod","mobileIntegrationLevel","usesRedirectionTo3rdParty","paymentProductGroup","BasicPaymentProductGroup","MaskedString","formattedValue","cursorIndex","_fillBuffer","index","offset","buffer","tempMask","valuec","Number","newValue","oldValue","split","maskc","c","cursor","tester","substring","getMaxLengthBasedOnMask","newLength","removeMask","valueIndex","inMask","ValidationRuleLuhn","errorMessageId","validate","luhnArr","sum","p","o","_validateDateFormat","ValidationRuleExpirationDate","now","getFullYear","getMonth","ValidationRuleFixedList","allowedValues","ValidationRuleLength","maxLength","minLength","ValidationRuleRange","maxValue","minValue","isNaN","ValidationRuleRegularExpression","regularExpression","RegExp","ValidationRuleEmailAddress","ValidationRuleBoletoBancarioRequiredness","fiscalNumberLength","fiscalNumberValue","ValidationRuleFactory","makeValidator","classType","toUpperCase","className","eval","DataRestrictions","isRequired","validationRules","validationRuleByType","_validationRules","_validationRuleByType","validationRuleFactory","validationRule","ValueMappingElement","displayName","FormElement","valueMapping","_valueMapping","Tooltip","PaymentProductFieldDisplayHints","obfuscate","placeholderLabel","preferredInputType","alwaysShow","PaymentProductField","_errorCodes","getErrorCodes","isValid","hasError","validator","applyWildcardMask","_paymentProductFields","_paymentProductFieldById","paymentProductField","PaymentProduct","basicPaymentProduct","paymentProductFields","paymentProductFieldById","PaymentProductGroup","_parseJson","_paymentProducts","_paymentProductById","_paymentProductByAccountOnFileId","aofs","j","jl","aof","BasicPaymentProducts","basicPaymentProducts","basicPaymentProductById","basicPaymentProductByAccountOnFileId","_paymentProductGroups","_paymentProductGroupById","paymentProductGroups","BasicPaymentProductGroups","basicPaymentProductGroups","basicPaymentProductGroupById","_products","_groups","_basicPaymentItems","doRemove","groupId","groupReplaced","productMethod","basicPaymentItems","basicPaymentItem","basicPaymentItemById","BasicPaymentItems","products","groups","_fieldValues","_paymentProduct","_accountOnFile","_tokenize","getErrorMessageIds","allRequiredFieldsPresent","getValue","getAccountOnFile","setValue","paymentProductFieldId","setTokenize","tokenize","getTokenize","concat","getValues","getMaskedValue","getMaskedValues","maskedString","getUnmaskedValues","setPaymentProduct","setAccountOnFile","getClientSessionID","C2SPaymentProductContext","payload","pki","forge","base64UrlEncode","asn1","str","util","encode64","createProtectedHeader","kid","JOSEHeader","alg","decodePemPublicKey","publickeyB64Encoded","publickeyB64Decoded","decode64","buffer2","createBuffer","publickeyObject2","fromDer","publicKeyFromAsn1","encryptContentEncryptionKey","CEK","encrypt","encryptPayload","encKey","initializationVector","cipher","createCipher","start","iv","update","finish","output","bytes","calculateAdditionalAuthenticatedDataLength","encodededProtectedHeader","lengthInBits","putInt32","calculateHMAC","macKey","cipherText","al","putBytes","hmacInput","hmac","create","sha512","digest","JOSEEncryptor","plainTextValues","protectedHeader","random","getBytesSync","CEKKEYLENGTH","encryptedContentEncryptionKey","encodedEncryptedContentEncryptionKey","IVLENGTH","encodededinitializationVector","encodedCipherText","calculatedHmac","Encryptor","publicKeyResponsePromise","paymentRequest","encryptedString","blob","nonce","bytesToHex","paymentValues","values","ownValues","Object","getOwnPropertyNames","session","_paymentProductId","_paymentRequestPayload","_paymentRequest","_paymentProductGroupId","_paymentProductGroup","_c2sCommunicator","_session","paymentRequestPayload","c2SPaymentProductContext","getBasicPaymentItems","useGroups","getIinDetails","getPaymentRequest","getEncryptor","Session"],"mappings":"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","file":"connectsdk.noEncrypt.min.js","sourcesContent":["(function (global) {\r\n    var connectsdk = {}, modules = {};\r\n\r\n    /* SDK internal function */\r\n    connectsdk.define = function (module, dependencies, fn) {\r\n        if (dependencies && dependencies.length) {\r\n            for (var i = 0; i < dependencies.length; i++) {\r\n                dependencies[i] = modules[dependencies[i]];\r\n            }\r\n        }\r\n        modules[module] = fn.apply(this, dependencies || []);\r\n    };\r\n\r\n    // Export `connectsdk` based on environment.\r\n    global.connectsdk = connectsdk;\r\n\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n\r\n    connectsdk.define('connectsdk.core', [], function () {\r\n        return connectsdk;\r\n    });\r\n\r\n    // use require.js if available otherwise we use our own\r\n    if (typeof define === 'undefined') {\r\n        global.define = connectsdk.define;\r\n    }\r\n} (typeof window === 'undefined' ? this : window));\r\n\r\n// (re)define core\r\ndefine(\"connectsdk.core\", [], function () {\r\n    var global = typeof window === 'undefined' ? this : window;\r\n    var connectsdk = {};\r\n    global.connectsdk = connectsdk;\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n    return connectsdk;\r\n});\r\n","define('connectsdk.promise', ['connectsdk.core'], function(turing) {\r\n\tfunction PromiseModule(global) {\r\n\t\t/**\r\n\t\t * The Promise class.\r\n\t\t */\r\n\t\tfunction Promise(singleton) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.pending = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Resolves a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.resolve = function(result) {\r\n\t\t\t\tself.complete('resolve', result);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Rejects a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.reject = function(result) {\r\n\t\t\t\tself.complete('reject', result);\r\n\t\t\t};\r\n\r\n\t\t\tif (singleton) {\r\n\t\t\t\tthis.isSingleton = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tPromise.prototype = {\r\n\t\t\t/**\r\n\t\t\t * Adds a success and failure handler for completion of this Promise object.\r\n\t\t\t *\r\n\t\t\t * @param {Function} success The success handler\r\n\t\t\t * @param {Function} success The failure handler\r\n\t\t\t * @returns {Promise} `this`\r\n\t\t\t */\r\n\t\t\tthen : function(success, failure) {\r\n\t\t\t\tthis.pending.push({\r\n\t\t\t\t\tresolve : success,\r\n\t\t\t\t\treject : failure\r\n\t\t\t\t});\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Runs through each pending 'thenable' based on type (resolve, reject).\r\n\t\t\t *\r\n\t\t\t * @param {String} type The thenable type\r\n\t\t\t * @param {Object} result A value\r\n\t\t\t */\r\n\t\t\tcomplete : function(type, result) {\r\n\t\t\t\twhile (this.pending[0]) {\r\n\t\t\t\t\tthis.pending.shift()[type](result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tglobal.Promise = Promise;\r\n\t}\r\n\tPromiseModule(connectsdk);\r\n\r\n\treturn connectsdk.Promise;\r\n});","define('connectsdk.net', ['connectsdk.core'], function(connectsdk) {\r\n  var net = {};\r\n\r\n  /**\r\n    * Ajax request options:\r\n    *\r\n    *   - `method`: {String} HTTP method - GET, POST, etc.\r\n    *   - `success`: {Function} A callback to run when a request is successful\r\n    *   - `error`: {Function} A callback to run when the request fails\r\n    *   - `asynchronous`: {Boolean} Defaults to asynchronous\r\n    *   - `postBody`: {String} The HTTP POST body\r\n    *   - `contentType`: {String} The content type of the request, default is `application/x-www-form-urlencoded`\r\n    *\r\n    */\r\n\r\n  /**\r\n    * Removes leading and trailing whitespace.\r\n    * @param {String}\r\n    * @return {String}\r\n    */\r\n  var trim = ''.trim\r\n    ? function(s) { return s.trim(); }\r\n    : function(s) { return s.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); };\r\n\r\n  function xhr() {\r\n    if (typeof XMLHttpRequest !== 'undefined' && (window.location.protocol !== 'file:' || !window.ActiveXObject)) {\r\n      return new XMLHttpRequest();\r\n    } else {\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.6.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.3.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function successfulRequest(request) {\r\n    return (request.status >= 200 && request.status < 300) ||\r\n        request.status == 304 ||\r\n        (request.status == 0 && request.responseText);\r\n  }\r\n\r\n  /**\r\n    * Serialize JavaScript for HTTP requests.\r\n    *\r\n    * @param {Object} object An Array or Object\r\n    * @returns {String} A string suitable for a GET or POST request\r\n    */\r\n  net.serialize = function(object) {\r\n    if (!object) return;\r\n\r\n    if (typeof object === 'string') {\r\n      return object;\r\n    }\r\n\r\n    var results = [];\r\n    for (var key in object) {\r\n      results.push(encodeURIComponent(key) + '=' + encodeURIComponent(object[key]));\r\n    }\r\n    return results.join('&');\r\n  };\r\n\r\n  /**\r\n    * JSON.parse support can be inferred using `connectsdk.detect('JSON.parse')`.\r\n    */\r\n  //connectsdk.addDetectionTest('JSON.parse', function() {\r\n  //  return window.JSON && window.JSON.parse;\r\n  //});\r\n\r\n  /**\r\n    * Parses JSON represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  net.parseJSON = function(string) {\r\n    if (typeof string !== 'string' || !string) return null;\r\n    string = trim(string);\r\n    /*\r\n    return connectsdk.detect('JSON.parse') ?\r\n      window.JSON.parse(string) :\r\n      (new Function('return ' + string))();\r\n    */\r\n    return window.JSON.parse(string);\r\n  };\r\n\r\n  /**\r\n    * Parses XML represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  if (window.DOMParser) {\r\n    net.parseXML = function(text) {\r\n      return new DOMParser().parseFromString(text, 'text/xml');\r\n    };\r\n  } else {\r\n    net.parseXML = function(text) {\r\n      var xml = new ActiveXObject('Microsoft.XMLDOM');\r\n      xml.async = 'false';\r\n      xml.loadXML(text);\r\n      return xml;\r\n    };\r\n  }\r\n\r\n  /**\r\n    * Creates an Ajax request.  Returns an object that can be used\r\n    * to chain calls.  For example:\r\n    *\r\n    *      $t.post('/post-test')\r\n    *        .data({ key: 'value' })\r\n    *        .end(function(res) {\r\n    *          assert.equal('value', res.responseText);\r\n    *        });\r\n    *\r\n    *      $t.get('/get-test')\r\n    *        .set('Accept', 'text/html')\r\n    *        .end(function(res) {\r\n    *          assert.equal('Sample text', res.responseText);\r\n    *        });\r\n    *\r\n    * The available chained methods are:\r\n    *\r\n    * `set` -- set a HTTP header\r\n    * `data` -- the postBody\r\n    * `end` -- send the request over the network, and calls your callback with a `res` object\r\n    * `send` -- sends the request and calls `data`: `.send({ data: value }, function(res) { });`\r\n    *\r\n    * @param {String} The URL to call\r\n    * @param {Object} Optional settings\r\n    * @returns {Object} A chainable object for further configuration\r\n    */\r\n  function ajax(url, options) {\r\n    var request = xhr(),\r\n        promise,\r\n        then,\r\n        response = {},\r\n        chain;\r\n    if (connectsdk.Promise) {\r\n      promise = new connectsdk.Promise();\r\n    }\r\n\r\n\r\n    function respondToReadyState(readyState) {\r\n      if (request.readyState == 4) {\r\n        var contentType = request.mimeType || request.getResponseHeader('content-type') || '';\r\n\r\n        response.status = request.status;\r\n        response.responseText = request.responseText;\r\n        if (/json/.test(contentType)) {\r\n          response.responseJSON = net.parseJSON(request.responseText);\r\n        } else if (/xml/.test(contentType)) {\r\n          response.responseXML = net.parseXML(request.responseText);\r\n      \t}\r\n\r\n        response.success = successfulRequest(request);\r\n\r\n        if (options.callback) {\r\n          return options.callback(response, request);\r\n        }\r\n\r\n        if (response.success) {\r\n          if (options.success) options.success(response, request);\r\n          if (promise) promise.resolve(response, request);\r\n        } else {\r\n          if (options.error) options.error(response, request);\r\n          if (promise) promise.reject(response, request);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Set the HTTP headers\r\n    function setHeaders() {\r\n      var defaults = {\r\n        'Accept': 'text/javascript, application/json, text/html, application/xml, text/xml, */*',\r\n        'Content-Type': 'application/json'\r\n      };\r\n\r\n      /**\r\n       * Merge headers with defaults.\r\n       */\r\n      for (var name in defaults) {\r\n        if (!options.headers.hasOwnProperty(name))\r\n          options.headers[name] = defaults[name];\r\n      }\r\n      for (var name in options.headers) {\r\n        request.setRequestHeader(name, options.headers[name]);\r\n      }\r\n\r\n    }\r\n\r\n    if (typeof options === 'undefined') options = {};\r\n\r\n    options.method = options.method ? options.method.toLowerCase() : 'get';\r\n    options.asynchronous = options.asynchronous || true;\r\n    options.postBody = options.postBody || '';\r\n    request.onreadystatechange = respondToReadyState;\r\n    request.open(options.method, url, options.asynchronous);\r\n\r\n    options.headers = options.headers || {};\r\n    if (options.contentType) {\r\n      options.headers['Content-Type'] = options.contentType;\r\n    }\r\n\r\n    if (typeof options.postBody !== 'string') {\r\n      // Serialize JavaScript\r\n      options.postBody = net.serialize(options.postBody);\r\n    }\r\n\r\n    // setHeaders();\r\n\r\n    function send() {\r\n      try {\r\n      \tsetHeaders();\r\n        request.send(options.postBody);\r\n      } catch (e) {\r\n        if (options.error) {\r\n          options.error();\r\n        }\r\n      }\r\n    }\r\n\r\n    chain = {\r\n      set: function(key, value) {\r\n        options.headers[key] = value;\r\n        return chain;\r\n      },\r\n\r\n      send: function(data, callback) {\r\n        options.postBody = net.serialize(data);\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      end: function(callback) {\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      data: function(data) {\r\n        options.postBody = net.serialize(data);\r\n        return chain;\r\n      },\r\n\r\n      then: function() {\r\n        chain.end();\r\n        if (promise) promise.then.apply(promise, arguments);\r\n        return chain;\r\n      }\r\n    };\r\n\r\n    return chain;\r\n  }\r\n\r\n  function JSONPCallback(url, success, failure) {\r\n    var self = this;\r\n    this.url = url;\r\n    this.methodName = '__connectsdk_jsonp_' + parseInt(new Date().getTime());\r\n    this.success = success;\r\n    this.failure = failure;\r\n\r\n    function runCallback(json) {\r\n      self.success(json);\r\n      self.teardown();\r\n    }\r\n\r\n    window[this.methodName] = runCallback;\r\n  }\r\n\r\n  JSONPCallback.prototype.run = function() {\r\n    this.scriptTag = document.createElement('script');\r\n    this.scriptTag.id = this.methodName;\r\n    this.scriptTag.src = this.url.replace('{callback}', this.methodName);\r\n    var that = this;\r\n    this.scriptTag.onerror = function() {\r\n    \tthat.failure();\r\n    };\r\n    document.body.appendChild(this.scriptTag);\r\n  };\r\n\r\n  JSONPCallback.prototype.teardown = function() {\r\n    window[this.methodName] = null;\r\n    try {\r\n    \tdelete window[this.methodName];\r\n    } catch (e) {}\r\n    if (this.scriptTag) {\r\n      document.body.removeChild(this.scriptTag);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * An Ajax GET request.\r\n   *\r\n   *      $t.get('/get-test')\r\n   *        .set('Accept', 'text/html')\r\n   *        .end(function(res) {\r\n   *          assert.equal('Sample text', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options\r\n   * @returns {Object} A chainable object for further configuration\r\n   */\r\n  net.get = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'get';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * An Ajax POST request.\r\n   *\r\n   *      $t.post('/post-test')\r\n   *        .data({ key: 'value' })\r\n   *        .end(function(res) {\r\n   *          assert.equal('value', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options (`postBody` may come in handy here)\r\n   * @returns {Object} An object for further chaining with promises\r\n   */\r\n  net.post = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'post';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * A jsonp request.  Example:\r\n   *\r\n   *     var url = 'http://feeds.delicious.com/v1/json/';\r\n   *     url += 'alex_young/javascript?callback={callback}';\r\n   *\r\n   *     connectsdk.net.jsonp(url, {\r\n   *       success: function(json) {\r\n   *         console.log(json);\r\n   *       }\r\n   *     });\r\n   *\r\n   * @param {String} url The URL to request\r\n   */\r\n  net.jsonp = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    var callback = new JSONPCallback(url, options.success, options.failure);\r\n    callback.run();\r\n  };\r\n\r\n  /**\r\n    * The Ajax methods are mapped to the `connectsdk` object:\r\n    *\r\n    *      connectsdk.get();\r\n    *      connectsdk.post();\r\n    *      connectsdk.json();\r\n    *\r\n    */\r\n  connectsdk.get = net.get;\r\n  connectsdk.post = net.post;\r\n  connectsdk.jsonp = net.jsonp;\r\n\r\n  net.ajax = ajax;\r\n  connectsdk.net = net;\r\n  return net;\r\n});","define(\"connectsdk.Util\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\t// Create a singleton from Util so the same util function can be used in different modules\r\n\tvar Util = (function () {\r\n\t\tvar instance;\r\n\r\n\t\tfunction createInstance() {\r\n\t\t\t// private variables to use in the public methods\r\n\t\t\tvar applePayPaymentProductId = 302;\r\n\t\t\tvar androidPayPaymentProductId = 320;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tapplePayPaymentProductId: applePayPaymentProductId,\r\n\t\t\t\tandroidPayPaymentProductId: androidPayPaymentProductId,\r\n\t\t\t\tgetMetadata: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tscreenSize: window.innerWidth + \"x\" + window.innerHeight,\r\n\t\t\t\t\t\tplatformIdentifier: window.navigator.userAgent,\r\n\t\t\t\t\t\tsdkIdentifier: ((document.GC && document.GC.rppEnabledPage) ? 'rpp-' : '') + 'JavaScriptClientSDK/v${version}',\r\n\t\t\t\t\t\tsdkCreator: 'Ingenico'\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tbase64Encode: function (data) {\r\n\t\t\t\t\tif (typeof data === \"object\") {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdata = JSON.stringify(data);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tthrow \"data must be either a String or a JSON object\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\t\t\t\t\tvar o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', tmp_arr = [];\r\n\r\n\t\t\t\t\tif (!data) {\r\n\t\t\t\t\t\treturn data;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdo {// pack three octets into four hexets\r\n\t\t\t\t\t\to1 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to2 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to3 = data.charCodeAt(i++);\r\n\r\n\t\t\t\t\t\tbits = o1 << 16 | o2 << 8 | o3;\r\n\r\n\t\t\t\t\t\th1 = bits >> 18 & 0x3f;\r\n\t\t\t\t\t\th2 = bits >> 12 & 0x3f;\r\n\t\t\t\t\t\th3 = bits >> 6 & 0x3f;\r\n\t\t\t\t\t\th4 = bits & 0x3f;\r\n\r\n\t\t\t\t\t\t// use hexets to index into b64, and append result to encoded string\r\n\t\t\t\t\t\ttmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\r\n\t\t\t\t\t} while (i < data.length);\r\n\r\n\t\t\t\t\tenc = tmp_arr.join('');\r\n\r\n\t\t\t\t\tvar r = data.length % 3;\r\n\r\n\t\t\t\t\treturn (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\r\n\t\t\t\t},\r\n\t\t\t\tfilterOutProductsThatAreNotSupportedInThisBrowser: function (json) {\r\n\t\t\t\t\tfor (var i = json.paymentProducts.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\t\t\tvar product = json.paymentProducts[i];\r\n\t\t\t\t\t\tif (product && this.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(product.id) > -1) {\r\n\t\t\t\t\t\t\tjson.paymentProducts.splice(i, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tpaymentProductsThatAreNotSupportedInThisBrowser: [applePayPaymentProductId]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tgetInstance: function () {\r\n\t\t\t\tif (!instance) {\r\n\t\t\t\t\tinstance = createInstance();\r\n\t\t\t\t}\r\n\t\t\t\treturn instance;\r\n\t\t\t}\r\n\t\t};\r\n\t})();\r\n\r\n\tconnectsdk.Util = Util;\r\n\treturn Util;\r\n});","define(\"connectsdk.AndroidPay\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.Util\"], function (connectsdk, Promise, Util) {\r\n\r\n    var _util = Util.getInstance();\r\n    var _C2SCommunicator = null;\r\n    var _paymentProductSpecificInputs = null;\r\n    var _context = null;\r\n\r\n    var setupRequestMethodData = function (networks, publicKey) {\r\n        var androidPayEnvironment = 'TEST';\r\n        if (_context.environment === 'PROD') {\r\n            androidPayEnvironment = 'PROD';\r\n        }\r\n        var methodData = [{\r\n            supportedMethods: ['https://android.com/pay'],\r\n            data: {\r\n                merchantId: _paymentProductSpecificInputs.androidPay.merchantId,\r\n                environment: androidPayEnvironment,\r\n                allowedCardNetworks: networks,\r\n                paymentMethodTokenizationParameters: {\r\n                    tokenizationType: 'NETWORK_TOKEN',\r\n                    parameters: {\r\n                        'publicKey': publicKey\r\n                    }\r\n                }\r\n            }\r\n        }];\r\n        return methodData;\r\n    }\r\n\r\n    var setupRequestDetails = function () {\r\n        var totalAmount = (_context.totalAmount / 100).toFixed(2);\r\n\r\n        var details = {\r\n            total: {\r\n                label: 'Total',\r\n                amount: {\r\n                    currency: 'USD',\r\n                    value: totalAmount\r\n                }\r\n            }\r\n        };\r\n        return details;\r\n    }\r\n\r\n    var setupRequestOptions = function () {\r\n        var options = {\r\n            requestShipping: false,\r\n            requestPayerEmail: false,\r\n            requestPayerPhone: false,\r\n            requestPayerName: false\r\n        };\r\n        return options;\r\n    }\r\n\r\n    var _doCanMakePayment = function (jsonNetworks, jsonPublicKey) {\r\n        var promise = new Promise();\r\n\r\n        var methodData = setupRequestMethodData(jsonNetworks.networks, jsonPublicKey.publicKey);\r\n        var details = setupRequestDetails();\r\n        var options = setupRequestOptions();\r\n        var request = new PaymentRequest(methodData, details, options);\r\n        setTimeout(function () {\r\n            // When the PRAPI is available, it does not mean the canMakePayment() method is also implemented.\r\n            if (request.canMakePayment) {\r\n                request.canMakePayment().then(function (result) {\r\n                    if (result) {\r\n                        promise.resolve(true);\r\n                    } else {\r\n                        promise.resolve(false);\r\n                    }\r\n                }).catch(function (error) {\r\n                    promise.reject(error);\r\n                });\r\n            } else {\r\n                promise.resolve(true);\r\n            }\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    var _checkPaymentProductPublicKey = function () {\r\n        var promise = new Promise();\r\n        _C2SCommunicator.getPaymentProductPublicKey(_util.androidPayPaymentProductId).then(function (jsonPublicKey) {\r\n            promise.resolve(jsonPublicKey);\r\n        }, function () {\r\n            promise.reject();\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    var _checkPaymentProductNetworks = function () {\r\n        var promise = new Promise();\r\n        _C2SCommunicator.getPaymentProductNetworks(_util.androidPayPaymentProductId, _context).then(function (jsonNetworks) {\r\n            if (jsonNetworks.networks && jsonNetworks.networks.length > 0) {\r\n                promise.resolve(jsonNetworks);\r\n            } else {\r\n                promise.reject();\r\n            }\r\n        }, function () {\r\n            promise.reject();\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    var _isPaymentRequestAPIAvailable = function () {\r\n        return window && window.PaymentRequest;\r\n    }\r\n\r\n    this.AndroidPay = function (C2SCommunicator) {\r\n        _C2SCommunicator = C2SCommunicator;\r\n        this.isAndroidPayAvailable = function (context, paymentProductSpecificInputs) {\r\n            _context = context;\r\n            _paymentProductSpecificInputs = paymentProductSpecificInputs;\r\n            var promise = new Promise();\r\n            setTimeout(function () {\r\n                if (_isPaymentRequestAPIAvailable()) {\r\n                    _checkPaymentProductNetworks().then(function (jsonNetworks) {\r\n                        _checkPaymentProductPublicKey().then(function (jsonPublicKey) {\r\n                            _doCanMakePayment(jsonNetworks, jsonPublicKey).then(function (isAndroidPayAvailable) {\r\n                                if (!isAndroidPayAvailable) {\r\n                                    _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                                }\r\n                                promise.resolve(isAndroidPayAvailable);\r\n                            }, function () {\r\n                                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                                promise.reject('failed to run canMakePayment() check with the payment request API');\r\n                            });\r\n                        }, function () {\r\n                            _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                            promise.reject('failed to retrieve payment product publickey');\r\n                        });\r\n                    }, function () {\r\n                        _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                        promise.reject('failed to retrieve paymentproduct networks');\r\n                    });\r\n                } else {\r\n                    _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                    promise.reject('Payment Request API is not available');\r\n                }\r\n            });\r\n            return promise;\r\n        }\r\n\r\n        this.isMerchantIdProvided = function (paymentProductSpecificInputs) {\r\n            if (paymentProductSpecificInputs.androidPay.merchantId) {\r\n                return paymentProductSpecificInputs.androidPay.merchantId;\r\n            } else {\r\n                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    connectsdk.AndroidPay = AndroidPay;\r\n    return AndroidPay;\r\n});","define(\"connectsdk.PublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PublicKeyResponse = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.keyId = json.keyId;\r\n\t\tthis.publicKey = json.publicKey;\r\n\t};\r\n\r\n\tconnectsdk.PublicKeyResponse = PublicKeyResponse;\r\n\treturn PublicKeyResponse;\r\n});","define(\"connectsdk.PaymentProductPublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProductPublicKeyResponse = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.keyId = json.keyId;\r\n\t\tthis.publicKey = json.publicKey;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductPublicKeyResponse = PaymentProductPublicKeyResponse;\r\n\treturn PaymentProductPublicKeyResponse;\r\n});","define(\"connectsdk.C2SCommunicatorConfiguration\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n    var C2SCommunicatorConfiguration = function (sessionDetails) {\r\n        this.endpoints = {\r\n                            PROD: {\r\n                                EU: {\r\n                                    API: \"https://api-eu.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay1.poweredbyglobalcollect.com\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://api-us.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay2.poweredbyglobalcollect.com\"\r\n                                }\r\n                            }\r\n                            ,PREPROD: {\r\n                                EU: {\r\n                                    API: \"https://api-eu-preprod.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay1.preprod.poweredbyglobalcollect.com\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://api-us-preprod.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay2.preprod.poweredbyglobalcollect.com\"\r\n                                }\r\n                            }\r\n                            ,SANDBOX: {\r\n                                EU: {\r\n                                    API: \"https://api-eu-sandbox.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay1.sandbox.poweredbyglobalcollect.com\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://api-us-sandbox.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay2.sandbox.poweredbyglobalcollect.com\"\r\n                                }\r\n                            }\r\n\r\n                            // Non public settings. Only needed in GC development environment. Do not use\r\n                            // these, they will not work outside GC.\r\n                            ,INTEGRATION: {\r\n                                EU: {\r\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                            }\r\n                            ,DEV_NAMI: {\r\n                                EU: {\r\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                            }\r\n                            ,DEV_ISC: {\r\n                                EU: {\r\n                                    API: \"//api.gc-dev.isaac.local/client/v1\"\r\n                                    ,ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"//api.gc-ci-dev.isaac.local/client/v1\"\r\n                                    ,ASSETS: \"//rpp.gc-ci-dev.isaac.local\"\r\n                                }\r\n                            }\r\n                        };\r\n\r\n        this.region = sessionDetails.region;\r\n        this.environment = sessionDetails.environment || 'RPP'; // in case this is used in the RPP; the RPP will override the endpoints; by using the apiBaseUrl\r\n        this.clientSessionId = sessionDetails.clientSessionID;\r\n        this.customerId = sessionDetails.customerId;\r\n        this.apiBaseUrl = (sessionDetails.apiBaseUrl || sessionDetails.apiBaseUrl === '') ? sessionDetails.apiBaseUrl : this.endpoints[this.environment][this.region].API;\r\n        this.assetsBaseUrl = (sessionDetails.assetsBaseUrl || sessionDetails.assetsBaseUrl === '' ) ? sessionDetails.assetsBaseUrl : this.endpoints[this.environment][this.region].ASSETS;\r\n    };\r\n\r\n    connectsdk.C2SCommunicatorConfiguration = C2SCommunicatorConfiguration;\r\n    return C2SCommunicatorConfiguration;\r\n});","define(\"connectsdk.IinDetailsResponse\", [\"connectsdk.core\", \"connectsdk.promise\"], function(connectsdk, Promise) {\r\n\r\n\tvar IinDetailsResponse = function () {\r\n\t\tthis.status = '';\r\n\t\tthis.countryCode = '';\r\n\t\tthis.paymentProductId = '';\r\n\t\tthis.isAllowedInContext = '';\r\n\t\tthis.coBrands = [];\r\n\t};\r\n\tconnectsdk.IinDetailsResponse = IinDetailsResponse;\r\n\treturn IinDetailsResponse;\r\n});","define(\"connectsdk.C2SCommunicator\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.net\", \"connectsdk.Util\", \"connectsdk.PublicKeyResponse\", \"connectsdk.PaymentProductPublicKeyResponse\", \"connectsdk.IinDetailsResponse\", \"connectsdk.AndroidPay\"], function (connectsdk, Promise, Net, Util, PublicKeyResponse, PaymentProductPublicKeyResponse, IinDetailsResponse, AndroidPay) {\r\n\tvar C2SCommunicator = function (c2SCommunicatorConfiguration, paymentProduct) {\r\n\t\tvar _c2SCommunicatorConfiguration = c2SCommunicatorConfiguration;\r\n\t\tvar _util = Util.getInstance();\r\n\t\tvar _cache = {};\r\n\t\tvar _providedPaymentProduct = paymentProduct;\r\n\t\tvar that = this;\r\n\t\tvar _AndroidPay = new AndroidPay(that);\r\n\r\n\t\tvar _mapType = {\r\n\t\t\t\"expirydate\": \"tel\",\r\n\t\t\t\"string\": \"text\",\r\n\t\t\t\"numericstring\": \"tel\",\r\n\t\t\t\"integer\": \"number\",\r\n\t\t\t\"expirationDate\": \"tel\"\r\n\t\t};\r\n\r\n\t\tvar _cleanJSON = function (json, url) {\r\n\t\t\tfor (var i = 0, il = json.fields.length; i < il; i++) {\r\n\t\t\t\tvar field = json.fields[i];\r\n\t\t\t\tfield.type = (field.displayHints.obfuscate) ? \"password\" : _mapType[field.type];\r\n\r\n\t\t\t\t// helper code for templating tools like Handlebars\r\n\t\t\t\tfor (validatorKey in field.dataRestrictions.validators) {\r\n\t\t\t\t\tfield.validators = field.validators || [];\r\n\t\t\t\t\tfield.validators.push(validatorKey);\r\n\t\t\t\t}\r\n\t\t\t\tif (field.displayHints.formElement && field.displayHints.formElement.type === 'list') {\r\n\t\t\t\t\tfield.displayHints.formElement.list = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// full image paths\r\n\t\t\t\tif (field.displayHints.tooltip && field.displayHints.tooltip.image) {\r\n\t\t\t\t\tfield.displayHints.tooltip.image = url + \"/\" + field.displayHints.tooltip.image;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// The server orders in a different way, so we apply the sortorder\r\n\t\t\tjson.fields.sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\t// set full image path\r\n\t\t\tjson.displayHints.logo = url + \"/\" + json.displayHints.logo;\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _extendLogoUrl = function (json, url, postfix) {\r\n\t\t\tfor (var i = 0, il = json[\"paymentProduct\" + postfix].length; i < il; i++) {\r\n\t\t\t\tvar product = json[\"paymentProduct\" + postfix][i];\r\n\t\t\t\tproduct.displayHints.logo = url + \"/\" + product.displayHints.logo;\r\n\t\t\t}\r\n\t\t\tjson[\"paymentProduct\" + postfix].sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _isPaymentProductInList = function (list, paymentProductId) {\r\n\t\t\tfor (var i = list.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\tvar product = list[i];\r\n\t\t\t\tif (product && (product.id === paymentProductId)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar metadata = _util.getMetadata();\r\n\r\n\t\tthis.getBasicPaymentProducts = function (context, paymentProductSpecificInputs) {\r\n\t\t\tvar paymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProducts-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ context.locale + \"_\" + context.isRecurring + \"_\" + context.currency;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetsBaseUrl, \"s\");\r\n\t\t\t\t\t\t\tif (_isPaymentProductInList(json.paymentProducts, _util.androidPayPaymentProductId)) {\r\n\t\t\t\t\t\t\t\tif (_AndroidPay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n\t\t\t\t\t\t\t\t\t_AndroidPay.isAndroidPayAvailable(context, paymentProductSpecificInputs).then(function (isAndroidPayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//AndroidPay does not have merchantId \r\n\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\tconsole.warn('You have not provided a merchantId for Android Pay, you can set this in the paymentProductSpecificInputs object');\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject('failed to retrieve Basic Payment Products', res);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function (context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroups-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ context.locale + \"_\" + context.isRecurring + \"_\" + context.currency;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetsBaseUrl, \"Groups\");\r\n\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function (paymentProductId, context, paymentProductSpecificInputs) {\r\n\t\t\tvar paymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProduct-\" + paymentProductId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + \"_\" + context.locale + \"_\" + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency;\r\n\t\t\tif (_util.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(paymentProductId) > -1) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.reject({\r\n\t\t\t\t\t\t\"errorId\": \"48b78d2d-1b35-4f8b-92cb-57cc2638e901\",\r\n\t\t\t\t\t\t\"errors\": [{\r\n\t\t\t\t\t\t\t\"code\": \"1007\",\r\n\t\t\t\t\t\t\t\"propertyName\": \"productId\",\r\n\t\t\t\t\t\t\t\"message\": \"UNKNOWN_PRODUCT_ID\",\r\n\t\t\t\t\t\t\t\"httpStatusCode\": 404\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductId) {\r\n\t\t\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar json = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t\t+ \"/products/\" + paymentProductId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t\t+ \"&currencyCode=\" + context.currency + \"&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t\t\t\tif (paymentProductId === _util.androidPayPaymentProductId) {\r\n\t\t\t\t\t\t\t\t\tif (_AndroidPay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n\t\t\t\t\t\t\t\t\t\t_AndroidPay.isAndroidPayAvailable(context, paymentProductSpecificInputs).then(function (isAndroidPayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (isAndroidPayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t\t//_isAndroidPayAvailable returned false so android pay is not available, so reject getPaymentProduct\r\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t//_isAndroidPayAvailable rejected so not available\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t// merchantId is not provided so reject\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tpromise.reject('failed to retrieve Payment Product', res);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroup-\" + paymentProductGroupId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + \"_\" + context.locale + \"_\" + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency;\r\n\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductGroupId) {\r\n\t\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar json = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups/\" + paymentProductGroupId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t+ \"&currencyCode=\" + context.currency + \"&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductIdByCreditCardNumber = function (partialCreditCardNumber, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, iinDetailsResponse = new IinDetailsResponse()\r\n\t\t\t\t, cacheKey = \"getPaymentProductIdByCreditCardNumber-\" + partialCreditCardNumber;\r\n\r\n\t\t\tvar that = this;\r\n\t\t\tthis.context = context;\r\n\t\t\tif (_cache[cacheKey]) {// cache is based on digit 1-6\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar isEnoughDigits = function (partialCreditCardNumber) {\r\n\t\t\t\t\tif (partialCreditCardNumber.length < 6) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t};\r\n\t\t\t\tif (isEnoughDigits(partialCreditCardNumber)) {\r\n\t\t\t\t\tNet.post(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/services/getIINdetails\")\r\n\t\t\t\t\t\t.data(JSON.stringify(this.convertContextToIinDetailsContext(partialCreditCardNumber, this.context)))\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.json = res.responseJSON;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.countryCode = res.responseJSON.countryCode;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.paymentProductId = res.responseJSON.paymentProductId;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.isAllowedInContext = res.responseJSON.isAllowedInContext;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.coBrands = res.responseJSON.coBrands;\r\n\t\t\t\t\t\t\t\t// check if this card is supported\r\n\t\t\t\t\t\t\t\t// if isAllowedInContext is available in the response set status and resolve\r\n\t\t\t\t\t\t\t\tif (res.responseJSON.hasOwnProperty('isAllowedInContext')) {\r\n\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\tif (iinDetailsResponse.isAllowedInContext === false) {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"EXISTING_BUT_NOT_ALLOWED\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//if isAllowedInContext is not available get the payment product again to determine status and resolve\r\n\t\t\t\t\t\t\t\t\tthat.getPaymentProduct(iinDetailsResponse.paymentProductId, that.context).then(function (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\tif (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNSUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tiinDetailsResponse.status = \"NOT_ENOUGH_DIGITS\";\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertContextToIinDetailsContext = function (partialCreditCardNumber, context) {\r\n\t\t\treturn {\r\n\t\t\t\t\"bin\": partialCreditCardNumber,\r\n\t\t\t\t\"paymentContext\": {\r\n\t\t\t\t\t\"countryCode\": context.countryCode,\r\n\t\t\t\t\t\"isRecurring\": context.isRecurring,\r\n\t\t\t\t\t\"amountOfMoney\": {\r\n\t\t\t\t\t\t\"amount\": context.totalAmount,\r\n\t\t\t\t\t\t\"currencyCode\": context.currency\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"publicKey\";\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/crypto/publickey\")\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar publicKeyResponse = new PublicKeyResponse(res.responseJSON);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = publicKeyResponse;\r\n\t\t\t\t\t\t\tpromise.resolve(publicKeyResponse);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to get public key\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductPublicKey = function (paymentProductId) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"paymentProductPublicKey\";\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/publicKey\")\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar paymentProductPublicKeyResponse = new PaymentProductPublicKeyResponse(res.responseJSON);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = paymentProductPublicKeyResponse;\r\n\t\t\t\t\t\t\tpromise.resolve(paymentProductPublicKeyResponse);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to get payment product public key\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t}\r\n\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"paymentProductNetworks-\" + paymentProductId + \"_\" + context.countryCode + \"_\" + context.currency + \"_\"\r\n\t\t\t\t\t+ context.totalAmount + \"_\" + context.isRecurring;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products/\" + paymentProductId + \"/networks\" + \"?countryCode=\" + context.countryCode + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&isRecurring=\" + context.isRecurring)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"getPaymentProductDirectory-\" + paymentProductId + \"_\" + currencyCode + \"_\" + countryCode;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/directory?countryCode=\" + countryCode + \"&currencyCode=\" + currencyCode)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to retrieve payment product directory\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"convertAmount-\" + amount + \"_\" + source + \"_\" + target;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/services/convert/amount?source=\" + source + \"&target=\" + target + \"&amount=\" + amount)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to convert amount\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t};\r\n\r\n\r\n\tconnectsdk.C2SCommunicator = C2SCommunicator;\r\n\treturn C2SCommunicator;\r\n});","define(\"connectsdk.LabelTemplateElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar LabelTemplateElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.attributeKey = json.attributeKey;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.LabelTemplateElement = LabelTemplateElement;\r\n\treturn LabelTemplateElement;\r\n});","define(\"connectsdk.Attribute\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Attribute = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.key = json.key;\r\n\t\tthis.value = json.value;\r\n\t\tthis.status = json.status;\r\n\t\tthis.mustWriteReason = json.mustWriteReason;\r\n\t};\r\n\r\n\tconnectsdk.Attribute = Attribute;\r\n\treturn Attribute;\r\n});","define(\"connectsdk.AccountOnFileDisplayHints\", [\"connectsdk.core\", \"connectsdk.LabelTemplateElement\"], function(connectsdk, LabelTemplateElement) {\r\n\r\n\tvar _parseJSON = function (_json, _labelTemplate, _labelTemplateElementByAttributeKey) {\r\n\t\tif (_json.labelTemplate) {\r\n\t\t\tfor (var i = 0, l = _json.labelTemplate.length; i < l; i++) {\r\n\t\t\t\tvar labelTemplateElement = new LabelTemplateElement(_json.labelTemplate[i]);\r\n\t\t\t\t_labelTemplate.push(labelTemplateElement);\r\n\t\t\t\t_labelTemplateElementByAttributeKey[labelTemplateElement.attributeKey] = labelTemplateElement;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFileDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.labelTemplate = [];\r\n\t\tthis.labelTemplateElementByAttributeKey = {};\r\n\r\n\t\t_parseJSON(json, this.labelTemplate, this.labelTemplateElementByAttributeKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFileDisplayHints = AccountOnFileDisplayHints;\r\n\treturn AccountOnFileDisplayHints;\r\n});","define(\"connectsdk.AccountOnFile\", [\"connectsdk.core\" ,\"connectsdk.AccountOnFileDisplayHints\", \"connectsdk.Attribute\"], function(connectsdk, AccountOnFileDisplayHints, Attribute) {\r\n\r\n\tvar _parseJSON = function (_json, _attributes, _attributeByKey) {\r\n\t\tif (_json.attributes) {\r\n\t\t\tfor (var i = 0, l = _json.attributes.length; i < l; i++) {\r\n\t\t\t\tvar attribute = new Attribute(_json.attributes[i]);\r\n\t\t\t\t_attributes.push(attribute);\r\n\t\t\t\t_attributeByKey[attribute.key] = attribute;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFile = function (json) {\r\n\t\tvar that = this;\r\n\t\tthis.json = json;\r\n\t\tthis.attributes = [];\r\n\t\tthis.attributeByKey = {};\r\n\t\tthis.displayHints = new AccountOnFileDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.paymentProductId = json.paymentProductId;\r\n\r\n\t\tthis.getMaskedValueByAttributeKey = function(attributeKey) {\r\n\t\t\tvar value = this.attributeByKey[attributeKey].value;\r\n\t\t\tvar wildcardMask;\r\n\t\t\ttry {\r\n\t\t\t\twildcardMask = this.displayHints.labelTemplateElementByAttributeKey[attributeKey].wildcardMask;\r\n\t\t\t} catch (e) {}\r\n\t\t\tif (value !== undefined && wildcardMask !== undefined) {\r\n\t\t\t\tvar maskingUtil = new connectsdk.MaskingUtil();\r\n\t\t\t\treturn maskingUtil.applyMask(wildcardMask, value);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t};\r\n\r\n\t\t_parseJSON(json, this.attributes, this.attributeByKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFile = AccountOnFile;\r\n\treturn AccountOnFile;\r\n});","define(\"connectsdk.PaymentProductDisplayHints\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProductDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayOrder = json.displayOrder;\r\n\t\tthis.label = json.label;\r\n\t\tthis.logo = json.logo;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductDisplayHints = PaymentProductDisplayHints;\r\n\treturn PaymentProductDisplayHints;\r\n});","define(\"connectsdk.BasicPaymentProduct\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\r\n\r\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProduct = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"product\";\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.allowsRecurring = json.allowsRecurring;\r\n\t\tthis.allowsTokenization = json.allowsTokenization;\r\n\t\tthis.autoTokenized  = json.autoTokenized ;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.maxAmount = json.maxAmount;\r\n\t\tthis.minAmount = json.minAmount;\r\n\t\tthis.paymentMethod = json.paymentMethod;\r\n\t\tthis.mobileIntegrationLevel = json.mobileIntegrationLevel;\r\n\t\tthis.usesRedirectionTo3rdParty = json.usesRedirectionTo3rdParty;\r\n\t\tthis.paymentProductGroup = json.paymentProductGroup;\r\n\r\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProduct = BasicPaymentProduct;\r\n\treturn BasicPaymentProduct;\r\n});","define(\"connectsdk.BasicPaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\r\n\r\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroup = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"group\";\r\n\t\tthis.id = json.id;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroup = BasicPaymentProductGroup;\r\n\treturn BasicPaymentProductGroup;\r\n});","define(\"connectsdk.MaskedString\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar MaskedString = function(formattedValue, cursorIndex) {\r\n\r\n\t\tthis.formattedValue = formattedValue;\r\n\t\tthis.cursorIndex = cursorIndex;\r\n\t};\r\n\r\n\tconnectsdk.MaskedString = MaskedString;\r\n\treturn MaskedString;\r\n});","define(\"connectsdk.MaskingUtil\", [\"connectsdk.core\", \"connectsdk.MaskedString\"], function(connectsdk, MaskedString) {\r\n\r\n\tvar _fillBuffer = function(index, offset, buffer, tempMask, valuec) {\r\n\t\tif (index+offset < valuec.length && index < tempMask.length) {\r\n\t\t\tif ((tempMask[index] === \"9\" && Number(valuec[index+offset]) > -1 && valuec[index+offset] !== \" \") || tempMask[index] === \"*\") {\r\n\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t} else {\r\n\t\t\t\tif (valuec[index+offset] === tempMask[index]) {\r\n\t\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t\t} else if (tempMask[index] !== \"9\" && tempMask[index] !== \"*\") {\r\n\t\t\t\t\tbuffer.push(tempMask[index]);\r\n\t\t\t\t\toffset--;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// offset++;\r\n\t\t\t\t\tvaluec.splice(index+offset, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_fillBuffer(index+1, offset, buffer, tempMask, valuec);\r\n\t\t}\r\n\t};\r\n\r\n\tvar MaskingUtil = function () {\r\n\t\tthis.applyMask = function (mask, newValue, oldValue) {\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = newValue.split(\"\");\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\ttempMask = [];\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttempMask.push(c);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// tempmask now contains the replaceable chars and the non-replaceable masks at the correct index\r\n\t\t\t\t_fillBuffer(0, 0, buffer, tempMask, valuec);\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnewValue = buffer.join(\"\");\r\n\t\t\tvar cursor = 1;\r\n\t\t\t// calculate the cursor index\r\n\t\t\tif (oldValue) {\r\n\t\t\t\tvar tester = oldValue.split(\"\");\r\n\t\t\t\tfor (var i = 0, il = buffer.length; i < il; i++) {\r\n\t\t\t\t\tif (buffer[i] !== tester[i]) {\r\n\t\t\t\t\t\tcursor = i+1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (newValue.substring(0, newValue.length -1) === oldValue) {\r\n\t\t\t\tcursor = newValue.length + 1;\r\n\t\t\t}\r\n\t\t\treturn new MaskedString(newValue, cursor);\r\n\t\t};\r\n\t\t\r\n\t\tthis.getMaxLengthBasedOnMask = function (mask) {\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tnewLength = -1;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tnewLength++;\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tnewLength--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newLength;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.removeMask = function (mask, value) {\r\n\t\t\t// remove the mask from the masked input\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = (value) ? value.split(\"\") : [];\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tvalueIndex = -1,\r\n\t\t\t\t\t\tinMask = false;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tvalueIndex++;\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tvalueIndex--;\r\n\t\t\t\t\t\tif (c === \"{\") {\r\n\t\t\t\t\t\t\tinMask = true;\r\n\t\t\t\t\t\t} else if (c === \"}\") {\r\n\t\t\t\t\t\t\tinMask = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (inMask && valuec[valueIndex]) {\r\n\t\t\t\t\t\t\tbuffer.push(valuec[valueIndex]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn buffer.join(\"\").trim();\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.MaskingUtil = MaskingUtil;\r\n\treturn MaskingUtil;\r\n});","define(\"connectsdk.ValidationRuleLuhn\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLuhn = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.validate = function (value) {\r\n\t\t\tvar luhnArr = [[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]]\r\n\t\t\t\t,sum = 0;\r\n\t\t\t\t\r\n\t   \t\tvalue.replace(/\\D+/g,\"\").replace(/[\\d]/g, function(c, p, o) {\r\n\t\t        sum += luhnArr[ (o.length-p)&1 ][ parseInt(c,10) ];\r\n\t\t    });\r\n\t\t    return (sum%10 === 0) && (sum > 0);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLuhn = ValidationRuleLuhn;\r\n\treturn ValidationRuleLuhn;\r\n});","define(\"connectsdk.ValidationRuleExpirationDate\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\tvar _validateDateFormat = function (value) {\r\n\t\tvar pattern = /\\d{4}|\\d{6}$/g;\r\n\t\treturn pattern.test(value);\r\n\t};\r\n\r\n\tvar ValidationRuleExpirationDate = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\t\tthis.errorMessageId = json.type;\r\n\r\n\t\t// value is mmYY or mmYYYY\r\n\t\tthis.validate = function (value) {\r\n\t\t\tvalue = value.replace(/[^\\d]/g, '');\r\n\t\t\tif (value.length === 4) {\r\n\t\t\t\tsplit = [value.substring(0, 2), \"20\" + value.substring(2, 4)];\r\n\t\t\t} else if (value.length === 6) {\r\n\t\t\t\tsplit = [value.substring(0, 2), value.substring(2, 6)];\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (_validateDateFormat(value)) {\r\n\t\t\t\tvar now = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\r\n\t\t\t\tvar expirationDate = new Date(split[1], split[0] - 1, 1);\r\n\t\t\t\tif (expirationDate.getMonth() !== Number(split[0] - 1) || expirationDate.getFullYear() !== Number(split[1])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn expirationDate >= now; // the expiration month could be THIS month but that is still valid!\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleExpirationDate = ValidationRuleExpirationDate;\r\n\treturn ValidationRuleExpirationDate;\r\n});","define(\"connectsdk.ValidationRuleFixedList\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleFixedList = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.allowedValues = json.attributes.allowedValues;\r\n\t\t\r\n\t\tthis.validate = function (value) {\r\n\t\t\tfor (var i = 0, il = this.allowedValues.length; i < il; i++) {\r\n\t\t\t\tif (this.allowedValues[i] === value) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleFixedList = ValidationRuleFixedList;\r\n\treturn ValidationRuleFixedList;\r\n});","define(\"connectsdk.ValidationRuleLength\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLength = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxLength = json.attributes.maxLength;\r\n\t\tthis.minLength = json.attributes.minLength;\r\n\t\t\r\n\t\tthis.validate = function (value) {\r\n\t\t\treturn this.minLength <= value.length && value.length <= this.maxLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLength = ValidationRuleLength;\r\n\treturn ValidationRuleLength;\r\n});","define(\"connectsdk.ValidationRuleRange\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRange = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxValue = json.attributes.maxValue;\r\n\t\tthis.minValue = json.attributes.minValue;\r\n\t\t\r\n\t\tthis.validate = function(value) {\r\n\t\t\tif (isNaN(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = Number(value);\r\n\t\t\treturn this.minValue <= value && value <= this.maxValue;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRange = ValidationRuleRange;\r\n\treturn ValidationRuleRange;\r\n});","define(\"connectsdk.ValidationRuleRegularExpression\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRegularExpression = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.regularExpression = json.attributes.regularExpression;\r\n\t\t\r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(this.regularExpression);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRegularExpression = ValidationRuleRegularExpression;\r\n\treturn ValidationRuleRegularExpression;\r\n});","define(\"connectsdk.ValidationRuleEmailAddress\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleEmailAddress = function(json) {\r\n        this.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        \r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(/^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleEmailAddress = ValidationRuleEmailAddress;\r\n\treturn ValidationRuleEmailAddress;\r\n});","define(\"connectsdk.ValidationRuleBoletoBancarioRequiredness\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleBoletoBancarioRequiredness = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.fiscalNumberLength = json.attributes.fiscalNumberLength;\r\n\t\t\r\n\t\tthis.validate = function (value, fiscalNumberValue) {\r\n\t\t\treturn (fiscalNumberValue.length === this.fiscalNumberLength && value.length > 0) || fiscalNumberValue.length !== this.fiscalNumberLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleBoletoBancarioRequiredness = ValidationRuleBoletoBancarioRequiredness;\r\n\treturn ValidationRuleBoletoBancarioRequiredness;\r\n});","define(\"connectsdk.ValidationRuleFactory\", [\"connectsdk.core\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleBoletoBancarioRequiredness\"], function (connectsdk, ValidationRuleEmailAddress, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleBoletoBancarioRequiredness) {\r\n\r\n    var ValidationRuleFactory = function () {\r\n\r\n        this.makeValidator = function (json) {\r\n            // create new class based on the rule\r\n            try {\r\n                var classType = json.type.charAt(0).toUpperCase() + json.type.slice(1), // camel casing\r\n                    className = eval(\"ValidationRule\" + classType);\r\n                return new className(json);\r\n            } catch (e) {\r\n                console.warn('no validator for ', classType);\r\n            }\r\n            return null;\r\n        };\r\n    };\r\n\r\n    connectsdk.ValidationRuleFactory = ValidationRuleFactory;\r\n    return ValidationRuleFactory;\r\n});","define(\"connectsdk.DataRestrictions\", [\"connectsdk.core\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleFactory\"], function(connectsdk, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleEmailAddress, ValidationRuleFactory) {\r\n\r\n\tvar DataRestrictions = function (json, mask) {\r\n\r\n\t\tvar _parseJSON = function (_json, _validationRules, _validationRuleByType) {\r\n\t\t    var validationRuleFactory = new ValidationRuleFactory();\r\n\t\t\tif (_json.validators) {\r\n\t\t\t\tfor (var key in _json.validators) {\r\n\t\t\t\t\tvar validationRule = validationRuleFactory.makeValidator({type: key, attributes: _json.validators[key]});\r\n\t\t\t\t\tif (validationRule) {\r\n\t\t\t\t\t\t_validationRules.push(validationRule);\r\n\t\t\t\t\t\t_validationRuleByType[validationRule.type] = validationRule;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.isRequired = json.isRequired;\r\n\t\tthis.validationRules = [];\r\n\t\tthis.validationRuleByType = {};\r\n\t\t\r\n\t\t_parseJSON(json, this.validationRules, this.validationRuleByType);\r\n\t};\r\n\r\n\tconnectsdk.DataRestrictions = DataRestrictions;\r\n\treturn DataRestrictions;\r\n});","define(\"connectsdk.ValueMappingElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValueMappingElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayName = json.displayName;\r\n\t\tthis.value = json.value;\r\n\t};\r\n\r\n\tconnectsdk.ValueMappingElement = ValueMappingElement;\r\n\treturn ValueMappingElement;\r\n});","define(\"connectsdk.FormElement\", [\"connectsdk.core\", \"connectsdk.ValueMappingElement\"], function(connectsdk, ValueMappingElement) {\r\n\r\n\tvar FormElement = function (json) {\r\n\r\n\t\tvar _parseJSON = function (_json, _valueMapping) {\r\n\t\t\tif (_json.valueMapping) {\r\n\t\t\t\tfor (var i = 0, l = _json.valueMapping.length; i < l; i++) {\r\n\t\t\t\t\t_valueMapping.push(new ValueMappingElement(_json.valueMapping[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type;\r\n\t\tthis.valueMapping = [];\r\n\t\t\r\n\t\t_parseJSON(json, this.valueMapping);\r\n\t};\r\n\r\n\tconnectsdk.FormElement = FormElement;\r\n\treturn FormElement;\r\n});","define(\"connectsdk.Tooltip\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Tooltip = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.image = json.image;\r\n\t\tthis.label = json.label;\r\n\t};\r\n\r\n\tconnectsdk.Tooltip = Tooltip;\r\n\treturn Tooltip;\r\n});","define(\"connectsdk.PaymentProductFieldDisplayHints\", [\"connectsdk.core\", \"connectsdk.Tooltip\", \"connectsdk.FormElement\"], function(connectsdk, Tooltip, FormElement) {\r\n\r\n\tvar PaymentProductFieldDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n \t\tthis.displayOrder = json.displayOrder;\r\n\t\tif (json.formElement) {\r\n\t\t\tthis.formElement = new FormElement(json.formElement);\r\n\t\t}\r\n\t\tthis.label = json.label;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.obfuscate = json.obfuscate;\r\n\t\tthis.placeholderLabel = json.placeholderLabel;\r\n\t\tthis.preferredInputType = json.preferredInputType;\r\n\t\tthis.tooltip = json.tooltip? new Tooltip(json.tooltip): undefined;\r\n\t\tthis.alwaysShow = json.alwaysShow;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductFieldDisplayHints = PaymentProductFieldDisplayHints;\r\n\treturn PaymentProductFieldDisplayHints;\r\n});","define(\"connectsdk.PaymentProductField\", [\"connectsdk.core\", \"connectsdk.PaymentProductFieldDisplayHints\", \"connectsdk.DataRestrictions\", \"connectsdk.MaskingUtil\"], function(connectsdk, PaymentProductFieldDisplayHints, DataRestrictions, MaskingUtil) {\r\n\tvar PaymentProductField = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayHints = new PaymentProductFieldDisplayHints(json.displayHints);\r\n\t\tthis.dataRestrictions = new DataRestrictions(json.dataRestrictions, this.displayHints.mask);\r\n\t\tthis.id = json.id;\r\n\t\tthis.type = json.type;\r\n\t\tvar _errorCodes = [];\r\n\r\n\t\tthis.getErrorCodes = function (value) {\r\n\t\t\tif (value) {\r\n\t\t\t\t_errorCodes = [];\r\n\t\t\t\tthis.isValid(value);\r\n\t\t\t}\r\n\t\t\treturn _errorCodes;\r\n\t\t};\r\n\t\tthis.isValid = function (value) {\r\n\t\t\t// isValid checks all datarestrictions\r\n\t\t\tvar validators = this.dataRestrictions.validationRules;\r\n\t\t\tvar hasError = false;\r\n\t\t\tvalue = this.removeMask(value);\r\n\t\t\tfor (var i = 0, il = validators.length; i < il; i++) {\r\n\t\t\t\tvar validator = validators[i];\r\n\t\t\t\tif (!validator.validate(value)) {\r\n\t\t\t\t\thasError = true;\r\n\t\t\t\t\t_errorCodes.push(validator.errorMessageId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn !hasError;\r\n\t\t};\r\n\t\tthis.applyMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.mask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.applyWildcardMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.wildcardMask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.removeMask = function (value) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.removeMask(this.displayHints.mask, value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductField = PaymentProductField;\r\n\treturn PaymentProductField;\r\n});","define(\"connectsdk.PaymentProduct\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProduct = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.json = json;\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct = PaymentProduct;\r\n\treturn PaymentProduct;\r\n});","define(\"connectsdk.PaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProductGroup = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.json = json;\r\n\t\tbasicPaymentProduct.json.type = \"group\";\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductGroup = PaymentProductGroup;\r\n\treturn PaymentProductGroup;\r\n});","define(\"connectsdk.BasicPaymentProducts\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\"], function(connectsdk, BasicPaymentProduct) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProducts, _accountsOnFile, _paymentProductById, _accountOnFileById, _paymentProductByAccountOnFileId) {\r\n\t\tif (_json.paymentProducts) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProducts.length; i < il; i++) {\r\n\t\t\t\tvar paymentProduct = new BasicPaymentProduct(_json.paymentProducts[i]);\r\n\t\t\t\t_paymentProducts.push(paymentProduct);\r\n\t\t\t\t_paymentProductById[paymentProduct.id] = paymentProduct;\r\n\r\n\t\t\t\tif (paymentProduct.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProduct.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t\t_paymentProductByAccountOnFileId[aof.id] = paymentProduct;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProducts = function (json) {\r\n\t\tthis.basicPaymentProducts = [];\r\n\t\tthis.basicPaymentProductById = {};\r\n\t\tthis.basicPaymentProductByAccountOnFileId = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProducts, this.accountsOnFile, this.basicPaymentProductById, this.accountOnFileById, this.basicPaymentProductByAccountOnFileId);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProducts = BasicPaymentProducts;\r\n\treturn BasicPaymentProducts;\r\n});","define(\"connectsdk.BasicPaymentProductGroups\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProductGroup\"], function(connectsdk, BasicPaymentProductGroup) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProductGroups, _accountsOnFile, _paymentProductGroupById, _accountOnFileById) {\r\n\t\tif (_json.paymentProductGroups) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductGroup = new BasicPaymentProductGroup(_json.paymentProductGroups[i]);\r\n\t\t\t\t_paymentProductGroups.push(paymentProductGroup);\r\n\t\t\t\t_paymentProductGroupById[paymentProductGroup.id] = paymentProductGroup;\r\n\r\n\t\t\t\tif (paymentProductGroup.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProductGroup.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroups = function (json) {\r\n\t\tthis.basicPaymentProductGroups = [];\r\n\t\tthis.basicPaymentProductGroupById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProductGroups, this.accountsOnFile, this.basicPaymentProductGroupById, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroups = BasicPaymentProductGroups;\r\n\treturn BasicPaymentProductGroups;\r\n});","define(\"connectsdk.BasicPaymentItems\", [\"connectsdk.core\"], function(connectsdk) {\r\n\t\"use strict\";\r\n\r\n\t\tvar _parseJson = function (_products, _groups, _basicPaymentItems) {\r\n\t\tvar doRemove = [];\r\n\t\tif (_groups) {\r\n\t\t\tfor (var i = 0, il = _groups.basicPaymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar groupId = _groups.basicPaymentProductGroups[i].id,\r\n\t\t\t\t\t\tgroupReplaced = false;\r\n\t\t\t\tfor (var j = 0, jl = _products.basicPaymentProducts.length; j < jl; j++) {\r\n\t\t\t\t\tvar productMethod = _products.basicPaymentProducts[j].paymentProductGroup;\r\n\t\t\t\t\tif (productMethod === groupId && groupReplaced === false) {\r\n\t\t\t\t\t\t// replace instance by group\r\n\t\t\t\t\t\t_products.basicPaymentProducts.splice(j, 1, _groups.basicPaymentProductGroups[i]);\r\n\t\t\t\t\t\tgroupReplaced = true;\r\n\t\t\t\t\t} else if (productMethod === groupId && groupReplaced === true) {\r\n\t\t\t\t\t\t// mark for removal\r\n\t\t\t\t\t\tdoRemove.push(j);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = doRemove.length -1, il = 0; i >= il; i--) {\r\n\t\t\t\t_products.basicPaymentProducts.splice(doRemove[i], 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t_basicPaymentItems.basicPaymentItems = JSON.parse(JSON.stringify(_products.basicPaymentProducts));\r\n\t\tfor (var i = 0, il = _basicPaymentItems.basicPaymentItems.length; i < il; i++) {\r\n\t\t\tvar basicPaymentItem = _basicPaymentItems.basicPaymentItems[i];\r\n\t\t\t_basicPaymentItems.basicPaymentItemById[basicPaymentItem.id] = basicPaymentItem;\r\n\t\t\tif (basicPaymentItem.accountsOnFile) {\r\n\t\t\t\tvar aofs = basicPaymentItem.accountsOnFile;\r\n\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t_basicPaymentItems.accountsOnFile.push(aof);\r\n\t\t\t\t\t_basicPaymentItems.accountOnFileById[aof.id] = aof;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tvar BasicPaymentItems = function (products, groups) {\r\n\t\tthis.basicPaymentItems = [];\r\n\t\tthis.basicPaymentItemById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJson(products, groups, this);\r\n\t};\r\n\tconnectsdk.BasicPaymentItems = BasicPaymentItems;\r\n\treturn BasicPaymentItems;\r\n});","define(\"connectsdk.PaymentRequest\", [\"connectsdk.core\"], function(connectsdk) {\r\n  var PaymentRequest = function(clientSessionID) {\r\n    var _clientSessionID = clientSessionID;\r\n    var _fieldValues = {};\r\n    var _paymentProduct = null;\r\n    var _accountOnFile = null;\r\n    var _tokenize = false;\r\n\r\n    this.isValid = function() {\r\n      var errors = this.getErrorMessageIds();\r\n      // besides checking the fields for errors check if all mandatory fields are present as well\r\n      var paymentProduct = this.getPaymentProduct();\r\n      if (!paymentProduct) {\r\n        return false;\r\n      }\r\n      var allRequiredFieldsPresent = true;\r\n      for (var i = 0; i < paymentProduct.paymentProductFields.length; i++) {\r\n        var field = paymentProduct.paymentProductFields[i];\r\n        if (field.dataRestrictions.isRequired) {\r\n          // is this field present in the request?\r\n          var storedValue = this.getValue(field.id);\r\n          if (!storedValue && !this.getAccountOnFile()) {\r\n              // if we have an acoount on file the account on file could have the field, so we can ignore it\r\n            allRequiredFieldsPresent = false;\r\n          }\r\n        }\r\n      }\r\n      return errors.length === 0 && allRequiredFieldsPresent;\r\n    };\r\n    this.setValue = function(paymentProductFieldId, value) {\r\n      _fieldValues[paymentProductFieldId] = value;\r\n    };\r\n    this.setTokenize = function(tokenize) {\r\n      _tokenize = tokenize;\r\n    };\r\n    this.getTokenize = function() {\r\n      return _tokenize;\r\n    };\r\n    this.getErrorMessageIds = function() {\r\n      var errors = [];\r\n      for (key in _fieldValues) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[key];\r\n        if (paymentProductField) {\r\n          errors = errors.concat(paymentProductField.getErrorCodes(_fieldValues[key]));\r\n        }\r\n      }\r\n      return errors;\r\n    };\r\n    this.getValue = function(paymentProductFieldId) {\r\n      return _fieldValues[paymentProductFieldId];\r\n    };\r\n    this.getValues = function() {\r\n      return _fieldValues;\r\n    };\r\n    this.getMaskedValue = function(paymentProductFieldId) {\r\n      var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n      var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n      return maskedString.formattedValue();\r\n    };\r\n    this.getMaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n        result[paymentProductFieldId] = maskedString.formattedValue;\r\n      }\r\n      return result;\r\n    };\r\n    this.getUnmaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        if (paymentProductField) {\r\n          var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n          var formattedValue = maskedString.formattedValue;\r\n          result[paymentProductFieldId] = paymentProductField.removeMask(formattedValue);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n    this.setPaymentProduct = function(paymentProduct) {\r\n      if (paymentProduct.type === \"group\") {\r\n        return;\r\n      }\r\n      _paymentProduct = paymentProduct;\r\n    };\r\n    this.getPaymentProduct = function() {\r\n      return _paymentProduct;\r\n    };\r\n    this.setAccountOnFile = function(accountOnFile) {\r\n      for (var i = 0, il = accountOnFile.attributes.length; i < il; i++) {\r\n        var attribute = accountOnFile.attributes[i];\r\n        delete _fieldValues[attribute.key];\r\n      }\r\n      _accountOnFile = accountOnFile;\r\n    };\r\n    this.getAccountOnFile = function() {\r\n      return _accountOnFile;\r\n    };\r\n    this.getClientSessionID = function() {\r\n\t\t    return clientSessionID;\r\n    };\r\n  };\r\n  connectsdk.PaymentRequest = PaymentRequest;\r\n  return PaymentRequest;\r\n});","define(\"connectsdk.C2SPaymentProductContext\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n  var C2SPaymentProductContext = function (payload) {\r\n\tthis.totalAmount = payload.totalAmount;\r\n\tthis.countryCode = payload.countryCode;\r\n\tthis.isRecurring = payload.isRecurring;\r\n\tthis.currency = payload.currency;\r\n\tthis.locale = payload.locale;\r\n  };\r\n\r\n  connectsdk.C2SPaymentProductContext = C2SPaymentProductContext;\r\n  return C2SPaymentProductContext;\r\n});","define(\"connectsdk.JOSEEncryptor\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar pki = forge.pki;\r\n\tvar asn1 = forge.asn1;\r\n\tvar CEKKEYLENGTH = 512;\r\n\tvar IVLENGTH = 128;\r\n\r\n\tvar base64UrlEncode = function(str) {\r\n\t\tstr = forge.util.encode64(str);\r\n\t\tstr = str.split('=')[0];\r\n\t\tstr = str.replace(/\\+/g, '-');\r\n\t\tstr = str.replace(/\\//g, '_');\r\n\t\treturn str;\r\n\t};\r\n\r\n\tvar createProtectedHeader = function(kid) {\r\n\t\tvar JOSEHeader = {\r\n\t\t\t\"alg\" : \"RSA-OAEP\",\r\n\t\t\t\"enc\" : \"A256CBC-HS512\",\r\n\t\t\t\"kid\" : kid\r\n\t\t};\r\n\t\treturn JSON.stringify(JOSEHeader);\r\n\t};\r\n\r\n\tvar decodePemPublicKey = function(publickeyB64Encoded) {\r\n\t\t// step 1: base64decode\r\n\t\tvar publickeyB64Decoded = forge.util.decode64(publickeyB64Encoded);\r\n\t\t// create a bytebuffer with these bytes\r\n\t\tvar buffer2 = forge.util.createBuffer(publickeyB64Decoded, 'raw');\r\n\t\t// convert DER to ASN1 object\r\n\t\tvar publickeyObject2 = forge.asn1.fromDer(buffer2);\r\n\t\t// convert to publicKey object\r\n\t\tvar publicKey2 = pki.publicKeyFromAsn1(publickeyObject2);\r\n\t\treturn publicKey2;\r\n\t};\r\n\r\n\tvar encryptContentEncryptionKey = function(CEK, publicKey) {\r\n\t\t// encrypt CEK with OAEP+SHA-1+MGF1Padding\r\n\t\tvar encryptedCEK = publicKey.encrypt(CEK, 'RSA-OAEP');\r\n\t\treturn encryptedCEK;\r\n\t};\r\n\r\n\tvar encryptPayload = function(payload, encKey, initializationVector) {\r\n\t\tvar cipher = forge.cipher.createCipher('AES-CBC', encKey);\r\n\t\tcipher.start({\r\n\t\t\tiv : initializationVector\r\n\t\t});\r\n\t\tcipher.update(forge.util.createBuffer(payload));\r\n\t\tcipher.finish();\r\n\t\treturn cipher.output.bytes();\r\n\t};\r\n\r\n\tvar calculateAdditionalAuthenticatedDataLength = function(encodededProtectedHeader) {\r\n\t\tvar buffer = forge.util.createBuffer(encodededProtectedHeader);\r\n\t\tvar lengthInBits = buffer.length() * 8;\r\n\r\n\t\tvar buffer2 = forge.util.createBuffer();\r\n\t\t// convert int to 64bit big endian\r\n\t\tbuffer2.putInt32(0);\r\n\t\tbuffer2.putInt32(lengthInBits);\r\n\t\treturn buffer2.bytes();\r\n\t};\r\n\r\n\tvar calculateHMAC = function(macKey, encodededProtectedHeader, initializationVector, cipherText, al) {\r\n\t\tvar buffer = forge.util.createBuffer();\r\n\t\tbuffer.putBytes(encodededProtectedHeader);\r\n\t\tbuffer.putBytes(initializationVector);\r\n\t\tbuffer.putBytes(cipherText);\r\n\t\tbuffer.putBytes(al);\r\n\r\n\t\tvar hmacInput = buffer.bytes();\r\n\r\n\t\tvar hmac = forge.hmac.create();\r\n\t\thmac.start(forge.sha512.create(), macKey);\r\n\t\thmac.update(hmacInput);\r\n\t\treturn hmac.digest().bytes();\r\n\t};\r\n\r\n\tvar JOSEEncryptor = function() {\r\n\r\n\t\tthis.encrypt = function(plainTextValues, publicKeyResponse) {\r\n\t\t\t// Create protected header and encode it with Base64 encoding\r\n\t\t\tvar payload = JSON.stringify(plainTextValues);\r\n\t\t\tvar protectedHeader = createProtectedHeader(publicKeyResponse.keyId);\r\n\t\t\tvar encodededProtectedHeader = base64UrlEncode(protectedHeader);\r\n\r\n\t\t\t// Create ContentEncryptionKey, is a random byte[]\r\n\t\t\tvar CEK = forge.random.getBytesSync(CEKKEYLENGTH / 8);\r\n\t\t\tvar publicKey = decodePemPublicKey(publicKeyResponse.publicKey);\r\n\r\n\t\t\t// Encrypt the contentEncryptionKey with the GC gateway publickey and encode it with Base64 encoding\r\n\t\t\tvar encryptedContentEncryptionKey = encryptContentEncryptionKey(CEK, publicKey);\r\n\t\t\tvar encodedEncryptedContentEncryptionKey = base64UrlEncode(encryptedContentEncryptionKey);\r\n\r\n\t\t\t// Split the contentEncryptionKey in ENC_KEY and MAC_KEY for using hmac\r\n\t\t\tvar macKey = CEK.substring(0, CEKKEYLENGTH / 2 / 8);\r\n\t\t\tvar encKey = CEK.substring(CEKKEYLENGTH / 2 / 8);\r\n\r\n\t\t\t// Create Initialization Vector\r\n\t\t\tvar initializationVector = forge.random.getBytesSync(IVLENGTH / 8);\r\n\t\t\tvar encodededinitializationVector = base64UrlEncode(initializationVector);\r\n\r\n\t\t\t// Encrypt content with ContentEncryptionKey and Initialization Vector\r\n\t\t\tvar cipherText = encryptPayload(payload, encKey, initializationVector);\r\n\t\t\tvar encodedCipherText = base64UrlEncode(cipherText);\r\n\r\n\t\t\t// Create Additional Authenticated Data  and Additional Authenticated Data Length\r\n\t\t\tvar al = calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader);\r\n\r\n\t\t\t// Calculates HMAC\r\n\t\t\tvar calculatedHmac = calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al);\r\n\r\n\t\t\t// Truncate HMAC Value to Create Authentication Tag\r\n\t\t\tvar authenticationTag = calculatedHmac.substring(0, calculatedHmac.length / 2);\r\n\t\t\tvar encodedAuthenticationTag = base64UrlEncode(authenticationTag);\r\n\r\n\t\t\treturn encodededProtectedHeader + \".\" + encodedEncryptedContentEncryptionKey + \".\" + encodededinitializationVector + \".\" + encodedCipherText + \".\" + encodedAuthenticationTag;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.JOSEEncryptor = JOSEEncryptor;\r\n\treturn JOSEEncryptor;\r\n});","define(\"connectsdk.Encryptor\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.JOSEEncryptor\"], function(connectsdk, Promise, JOSEEncryptor) {\r\n\r\n\tvar Encryptor = function(publicKeyResponsePromise) {\r\n\t\tthis.encrypt = function(paymentRequest) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar encryptedString = '';\r\n\t\t\tpublicKeyResponsePromise.then(function (publicKeyResponse) {\r\n\t\t\t\tif (paymentRequest.isValid()) {\r\n\t\t\t\t    \r\n\t\t\t\t\tvar blob = {\r\n\t\t\t\t\t   clientSessionId: paymentRequest.getClientSessionID()\r\n\t\t\t\t\t   ,nonce: forge.util.bytesToHex(forge.random.getBytesSync(16))\r\n\t\t\t\t\t   ,paymentProductId: paymentRequest.getPaymentProduct().id\r\n                       ,tokenize: paymentRequest.getTokenize()\r\n                    };\r\n                    \r\n\t\t\t\t\tif (paymentRequest.getAccountOnFile()) {\r\n                        blob[\"accountOnFileId\"] = paymentRequest.getAccountOnFile().id;\r\n                    }\r\n                    \r\n                    var paymentValues = [], values = paymentRequest.getUnmaskedValues();\r\n                    var ownValues = Object.getOwnPropertyNames(values);\r\n\t\t\t\t\tfor (var i = 0; i < ownValues.length; i++) {\r\n\t\t\t\t\t\tvar propertyName = ownValues[i];\r\n\t\t\t\t\t\tif (propertyName !== \"length\") {\r\n\t\t\t\t\t\t\tpaymentValues.push({\r\n\t\t\t\t\t\t\t\tkey: propertyName,\r\n\t\t\t\t\t\t\t\tvalue: values[propertyName]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    blob[\"paymentValues\"] = paymentValues;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// use blob to encrypt\r\n\t\t\t\t\tvar joseEncryptor = new JOSEEncryptor();\r\n\t\t\t\t\tencryptedString = joseEncryptor.encrypt(blob, publicKeyResponse);\r\n\t\t\t\t\tpromise.resolve(encryptedString);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpromise.reject(paymentRequest.getErrorMessageIds());\r\n\t\t\t\t}\r\n\t\t\t}, function (error) {\r\n\t\t\t\tpromise.reject(error);\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.Encryptor = Encryptor;\r\n\treturn Encryptor;\r\n});","define(\"connectsdk.Session\", [\"connectsdk.core\", \"connectsdk.C2SCommunicator\", \"connectsdk.C2SCommunicatorConfiguration\", \"connectsdk.IinDetailsResponse\", \"connectsdk.promise\", \"connectsdk.C2SPaymentProductContext\", \"connectsdk.BasicPaymentProducts\", \"connectsdk.BasicPaymentProductGroups\", \"connectsdk.PaymentProduct\", \"connectsdk.PaymentProductGroup\", \"connectsdk.BasicPaymentItems\", \"connectsdk.PaymentRequest\", \"connectsdk.Encryptor\"], function(connectsdk, C2SCommunicator, C2SCommunicatorConfiguration, IinDetailsResponse, Promise, C2SPaymentProductContext, BasicPaymentProducts, BasicPaymentProductGroups, PaymentProduct, PaymentProductGroup, BasicPaymentItems, PaymentRequest, Encryptor) {\r\n\r\n\tvar session = function (sessionDetails, paymentProduct) {\r\n\r\n\t\tvar _c2SCommunicatorConfiguration = new C2SCommunicatorConfiguration(sessionDetails)\r\n\t\t\t,_c2sCommunicator = new C2SCommunicator(_c2SCommunicatorConfiguration, paymentProduct)\r\n\t\t\t,_paymentProductId, _paymentProduct, _paymentRequestPayload, _paymentRequest, _paymentProductGroupId, _paymentProductGroup, _session = this;\r\n\t\tthis.apiBaseUrl = _c2SCommunicatorConfiguration.apiBaseUrl;\r\n\t\tthis.assetsBaseUrl = _c2SCommunicatorConfiguration.assetsBaseUrl;\r\n\r\n\t\tthis.getBasicPaymentProducts = function(paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProducts(c2SPaymentProductContext, paymentProductSpecificInputs).then(function (json) {\t\t\t\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProducts = new BasicPaymentProducts(json);\r\n\t\t\t\tpromise.resolve(paymentProducts);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function(paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProductGroups(c2SPaymentProductContext).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProductGroups = new BasicPaymentProductGroups(json);\r\n\t\t\t\tpromise.resolve(paymentProductGroups);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentItems = function(paymentRequestPayload, useGroups, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t// get products & groups\r\n\t\t\tif (useGroups) {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\t_session.getBasicPaymentProductGroups(paymentRequestPayload).then(function (groups) {\r\n\t\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, groups);\r\n\t\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, null);\r\n\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function(paymentProductId, paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductId = paymentProductId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProduct(paymentProductId, c2SPaymentProductContext, paymentProductSpecificInputs).then(function (response) {\r\n\t\t\t\t_paymentProduct = new PaymentProduct(response);\r\n\t\t\t\tpromise.resolve(_paymentProduct);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProduct = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function(paymentProductGroupId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductGroupId = paymentProductGroupId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductGroup(paymentProductGroupId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentProductGroup = new PaymentProductGroup(response);\r\n\t\t\t\tpromise.resolve(_paymentProductGroup);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProductGroup = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getIinDetails = function (partialCreditCardNumber, paymentRequestPayload) {\r\n\t\t\tpartialCreditCardNumber = partialCreditCardNumber.replace(/ /g, '').substring(0,6);\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\treturn _c2sCommunicator.getPaymentProductIdByCreditCardNumber(partialCreditCardNumber, c2SPaymentProductContext);\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\treturn _c2sCommunicator.getPublicKey();\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductPublicKey = function (paymentProductId) {\r\n\t\t\treturn _c2sCommunicator.getPaymentProductPublicKey(paymentProductId);\r\n\t\t};\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductNetworks(paymentProductId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tpromise.resolve(response);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\treturn _c2sCommunicator.getPaymentProductDirectory(paymentProductId, currencyCode, countryCode);\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\treturn _c2sCommunicator.convertAmount(amount, source, target);\r\n\t\t};\r\n\r\n\t\tthis.getPaymentRequest = function () {\r\n\t\t\tif (!_paymentRequest) {\r\n\t\t\t\t_paymentRequest = new PaymentRequest(sessionDetails.clientSessionID);\r\n\r\n\t\t\t}\r\n\t\t\treturn _paymentRequest;\r\n\t\t};\r\n\r\n\t\tthis.getEncryptor = function () {\r\n\t\t\tvar publicKeyResponsePromise = _c2sCommunicator.getPublicKey();\r\n\t\t\treturn new Encryptor(publicKeyResponsePromise);\r\n\t\t};\r\n\t};\r\n\tconnectsdk.Session = session;\r\n\treturn session;\r\n});"]}