{"version":3,"sources":["core.js","promise.js","net.js","util.js","PublicKeyResponse.js","C2SCommunicatorConfiguration.js","IinDetailsResponse.js","C2SCommunicator.js","LabelTemplateElement.js","Attribute.js","AccountOnFileDisplayHints.js","AccountOnFile.js","PaymentProductDisplayHints.js","BasicPaymentProduct.js","BasicPaymentProductGroup.js","MaskedString.js","MaskingUtil.js","ValidationRuleLuhn.js","ValidationRuleExpirationDate.js","ValidationRuleFixedList.js","ValidationRuleLength.js","ValidationRuleRange.js","ValidationRuleRegularExpression.js","ValidationRuleEmailAddress.js","ValidationRuleFactory.js","DataRestrictions.js","ValueMappingElement.js","FormElement.js","Tooltip.js","PaymentProductFieldDisplayHints.js","PaymentProductField.js","PaymentProduct.js","PaymentProductGroup.js","BasicPaymentProducts.js","BasicPaymentProductGroups.js","BasicPaymentItems.js","PaymentRequest.js","C2SPaymentProductContext.js","JOSEEncryptor.js","Encryptor.js","session.js"],"names":["global","connectsdk","modules","define","module","dependencies","fn","length","i","apply","this","exports","window","turing","PromiseModule","Promise","singleton","self","pending","resolve","result","complete","reject","isSingleton","prototype","then","success","failure","push","type","shift","xhr","XMLHttpRequest","location","protocol","ActiveXObject","e","successfulRequest","request","status","responseText","ajax","url","options","respondToReadyState","readyState","contentType","mimeType","getResponseHeader","response","test","responseJSON","net","parseJSON","responseXML","parseXML","callback","promise","error","setHeaders","defaults","Accept","Content-Type","name","headers","hasOwnProperty","setRequestHeader","send","postBody","chain","method","toLowerCase","asynchronous","onreadystatechange","open","serialize","set","key","value","data","end","arguments","JSONPCallback","runCallback","json","teardown","methodName","parseInt","Date","getTime","trim","s","replace","object","results","encodeURIComponent","join","string","JSON","parse","DOMParser","text","parseFromString","xml","async","loadXML","run","scriptTag","document","createElement","id","src","that","onerror","body","appendChild","removeChild","get","post","jsonp","Util","getMetadata","screenSize","innerWidth","innerHeight","platformIdentifier","navigator","userAgent","sdkIdentifier","GC","rppEnabledPage","sdkCreator","base64Encode","stringify","o1","o2","o3","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","slice","PublicKeyResponse","keyId","publicKey","C2SCommunicatorConfiguration","sessionDetails","endpoints","PROD","EU","API","ASSETS","US","PREPROD","SANDBOX","INTEGRATION","DEV_NAMI","DEV_ISC","region","environment","clientSessionId","clientSessionID","customerId","apiBaseUrl","assetsBaseUrl","IinDetailsResponse","countryCode","paymentProductId","isAllowedInContext","coBrands","Net","C2SCommunicator","c2SCommunicatorConfiguration","paymentProduct","_c2SCommunicatorConfiguration","_util","_cache","_providedPaymentProduct","_mapType","expirydate","numericstring","integer","expirationDate","_cleanJSON","il","fields","field","displayHints","validatorKey","dataRestrictions","validators","formElement","list","tooltip","image","sort","a","b","displayOrder","logo","_extendLogoUrl","postfix","product","metadata","getBasicPaymentProducts","context","cacheBust","cacheKey","totalAmount","locale","isRecurring","currency","setTimeout","res","getBasicPaymentProductGroups","getPaymentProduct","cleanedJSON","getPaymentProductGroup","paymentProductGroupId","getPaymentProductIdByCreditCardNumber","partialCreditCardNumber","iinDetailsResponse","isEnoughDigits","convertContextToIinDetailsContext","bin","paymentContext","amountOfMoney","amount","currencyCode","getPublicKey","publicKeyResponse","getPaymentProductDirectory","convertAmount","source","target","LabelTemplateElement","attributeKey","mask","wildcardMask","Attribute","mustWriteReason","_parseJSON","_json","_labelTemplate","_labelTemplateElementByAttributeKey","labelTemplate","l","labelTemplateElement","AccountOnFileDisplayHints","labelTemplateElementByAttributeKey","_attributes","_attributeByKey","attributes","attribute","AccountOnFile","attributeByKey","getMaskedValueByAttributeKey","undefined","maskingUtil","MaskingUtil","applyMask","PaymentProductDisplayHints","label","_accountsOnFile","_accountOnFileById","accountsOnFile","accountOnFile","BasicPaymentProduct","accountOnFileById","allowsRecurring","allowsTokenization","autoTokenized","maxAmount","minAmount","paymentMethod","mobileIntegrationLevel","usesRedirectionTo3rdParty","paymentProductGroup","BasicPaymentProductGroup","MaskedString","formattedValue","cursorIndex","_fillBuffer","index","offset","buffer","tempMask","valuec","Number","splice","newValue","oldValue","split","maskc","c","cursor","tester","substring","getMaxLengthBasedOnMask","newLength","removeMask","valueIndex","inMask","ValidationRuleLuhn","errorMessageId","validate","luhnArr","sum","p","o","_validateDateFormat","pattern","ValidationRuleExpirationDate","now","getFullYear","getMonth","ValidationRuleFixedList","allowedValues","ValidationRuleLength","maxLength","minLength","ValidationRuleRange","maxValue","minValue","isNaN","ValidationRuleRegularExpression","regularExpression","regexp","RegExp","ValidationRuleEmailAddress","ValidationRuleFactory","makeValidator","classType","toUpperCase","className","eval","DataRestrictions","_validationRules","_validationRuleByType","validationRuleFactory","validationRule","isRequired","validationRules","validationRuleByType","ValueMappingElement","displayName","FormElement","_valueMapping","valueMapping","Tooltip","PaymentProductFieldDisplayHints","obfuscate","placeholderLabel","preferredInputType","alwaysShow","PaymentProductField","_errorCodes","getErrorCodes","isValid","hasError","validator","applyWildcardMask","_paymentProductFields","_paymentProductFieldById","paymentProductField","PaymentProduct","basicPaymentProduct","paymentProductFields","paymentProductFieldById","PaymentProductGroup","_parseJson","_paymentProducts","_paymentProductById","_paymentProductByAccountOnFileId","paymentProducts","aofs","j","jl","aof","BasicPaymentProducts","basicPaymentProducts","basicPaymentProductById","basicPaymentProductByAccountOnFileId","_paymentProductGroups","_paymentProductGroupById","paymentProductGroups","BasicPaymentProductGroups","basicPaymentProductGroups","basicPaymentProductGroupById","_products","_groups","_basicPaymentItems","doRemove","groupId","groupReplaced","productMethod","basicPaymentItems","basicPaymentItem","basicPaymentItemById","BasicPaymentItems","products","groups","PaymentRequest","_fieldValues","_paymentProduct","_accountOnFile","_tokenize","errors","getErrorMessageIds","allRequiredFieldsPresent","storedValue","getValue","getAccountOnFile","setValue","paymentProductFieldId","setTokenize","tokenize","getTokenize","concat","getValues","getMaskedValue","maskedString","getMaskedValues","getUnmaskedValues","setPaymentProduct","setAccountOnFile","getClientSessionID","C2SPaymentProductContext","payload","pki","forge","CEKKEYLENGTH","asn1","IVLENGTH","base64UrlEncode","str","util","encode64","createProtectedHeader","kid","JOSEHeader","alg","decodePemPublicKey","publickeyB64Encoded","publickeyB64Decoded","decode64","buffer2","createBuffer","publickeyObject2","fromDer","publicKey2","publicKeyFromAsn1","encryptContentEncryptionKey","CEK","encryptedCEK","encrypt","encryptPayload","encKey","initializationVector","cipher","createCipher","start","iv","update","finish","output","bytes","calculateAdditionalAuthenticatedDataLength","encodededProtectedHeader","lengthInBits","putInt32","calculateHMAC","macKey","cipherText","al","putBytes","hmacInput","hmac","create","sha512","digest","JOSEEncryptor","plainTextValues","protectedHeader","random","getBytesSync","encryptedContentEncryptionKey","encodedEncryptedContentEncryptionKey","encodededinitializationVector","encodedCipherText","calculatedHmac","authenticationTag","encodedAuthenticationTag","Encryptor","publicKeyResponsePromise","paymentRequest","encryptedString","blob","nonce","bytesToHex","paymentValues","values","ownValues","Object","getOwnPropertyNames","propertyName","joseEncryptor","session","_paymentProductId","_paymentRequestPayload","_paymentRequest","_paymentProductGroupId","_paymentProductGroup","_c2sCommunicator","_session","paymentRequestPayload","c2SPaymentProductContext","getBasicPaymentItems","useGroups","getIinDetails","getPaymentRequest","getEncryptor","Session"],"mappings":"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","file":"connectsdk.noEncrypt.min.js","sourcesContent":["(function (global) {\r\n    var connectsdk = {}, modules = {};\r\n\r\n    /* SDK internal function */\r\n    connectsdk.define = function (module, dependencies, fn) {\r\n        if (dependencies && dependencies.length) {\r\n            for (var i = 0; i < dependencies.length; i++) {\r\n                dependencies[i] = modules[dependencies[i]];\r\n            }\r\n        }\r\n        modules[module] = fn.apply(this, dependencies || []);\r\n    };\r\n\r\n    // Export `connectsdk` based on environment.\r\n    global.connectsdk = connectsdk;\r\n\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n\r\n    connectsdk.define('connectsdk.core', [], function () {\r\n        return connectsdk;\r\n    });\r\n\r\n    // use require.js if available otherwise we use our own\r\n    if (typeof define === 'undefined') {\r\n        global.define = connectsdk.define;\r\n    }\r\n} (typeof window === 'undefined' ? this : window));\r\n\r\n// (re)define core\r\ndefine(\"connectsdk.core\", [], function () {\r\n    var global = typeof window === 'undefined' ? this : window;\r\n    var connectsdk = {};\r\n    global.connectsdk = connectsdk;\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n    return connectsdk;\r\n});\r\n","define('connectsdk.promise', ['connectsdk.core'], function(turing) {\r\n\tfunction PromiseModule(global) {\r\n\t\t/**\r\n\t\t * The Promise class.\r\n\t\t */\r\n\t\tfunction Promise(singleton) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.pending = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Resolves a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.resolve = function(result) {\r\n\t\t\t\tself.complete('resolve', result);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Rejects a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.reject = function(result) {\r\n\t\t\t\tself.complete('reject', result);\r\n\t\t\t};\r\n\r\n\t\t\tif (singleton) {\r\n\t\t\t\tthis.isSingleton = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tPromise.prototype = {\r\n\t\t\t/**\r\n\t\t\t * Adds a success and failure handler for completion of this Promise object.\r\n\t\t\t *\r\n\t\t\t * @param {Function} success The success handler\r\n\t\t\t * @param {Function} success The failure handler\r\n\t\t\t * @returns {Promise} `this`\r\n\t\t\t */\r\n\t\t\tthen : function(success, failure) {\r\n\t\t\t\tthis.pending.push({\r\n\t\t\t\t\tresolve : success,\r\n\t\t\t\t\treject : failure\r\n\t\t\t\t});\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Runs through each pending 'thenable' based on type (resolve, reject).\r\n\t\t\t *\r\n\t\t\t * @param {String} type The thenable type\r\n\t\t\t * @param {Object} result A value\r\n\t\t\t */\r\n\t\t\tcomplete : function(type, result) {\r\n\t\t\t\twhile (this.pending[0]) {\r\n\t\t\t\t\tthis.pending.shift()[type](result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tglobal.Promise = Promise;\r\n\t}\r\n\tPromiseModule(connectsdk);\r\n\r\n\treturn connectsdk.Promise;\r\n});","define('connectsdk.net', ['connectsdk.core'], function(connectsdk) {\r\n  var net = {};\r\n\r\n  /**\r\n    * Ajax request options:\r\n    *\r\n    *   - `method`: {String} HTTP method - GET, POST, etc.\r\n    *   - `success`: {Function} A callback to run when a request is successful\r\n    *   - `error`: {Function} A callback to run when the request fails\r\n    *   - `asynchronous`: {Boolean} Defaults to asynchronous\r\n    *   - `postBody`: {String} The HTTP POST body\r\n    *   - `contentType`: {String} The content type of the request, default is `application/x-www-form-urlencoded`\r\n    *\r\n    */\r\n\r\n  /**\r\n    * Removes leading and trailing whitespace.\r\n    * @param {String}\r\n    * @return {String}\r\n    */\r\n  var trim = ''.trim\r\n    ? function(s) { return s.trim(); }\r\n    : function(s) { return s.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); };\r\n\r\n  function xhr() {\r\n    if (typeof XMLHttpRequest !== 'undefined' && (window.location.protocol !== 'file:' || !window.ActiveXObject)) {\r\n      return new XMLHttpRequest();\r\n    } else {\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.6.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.3.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function successfulRequest(request) {\r\n    return (request.status >= 200 && request.status < 300) ||\r\n        request.status == 304 ||\r\n        (request.status == 0 && request.responseText);\r\n  }\r\n\r\n  /**\r\n    * Serialize JavaScript for HTTP requests.\r\n    *\r\n    * @param {Object} object An Array or Object\r\n    * @returns {String} A string suitable for a GET or POST request\r\n    */\r\n  net.serialize = function(object) {\r\n    if (!object) return;\r\n\r\n    if (typeof object === 'string') {\r\n      return object;\r\n    }\r\n\r\n    var results = [];\r\n    for (var key in object) {\r\n      results.push(encodeURIComponent(key) + '=' + encodeURIComponent(object[key]));\r\n    }\r\n    return results.join('&');\r\n  };\r\n\r\n  /**\r\n    * JSON.parse support can be inferred using `connectsdk.detect('JSON.parse')`.\r\n    */\r\n  //connectsdk.addDetectionTest('JSON.parse', function() {\r\n  //  return window.JSON && window.JSON.parse;\r\n  //});\r\n\r\n  /**\r\n    * Parses JSON represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  net.parseJSON = function(string) {\r\n    if (typeof string !== 'string' || !string) return null;\r\n    string = trim(string);\r\n    /*\r\n    return connectsdk.detect('JSON.parse') ?\r\n      window.JSON.parse(string) :\r\n      (new Function('return ' + string))();\r\n    */\r\n    return window.JSON.parse(string);\r\n  };\r\n\r\n  /**\r\n    * Parses XML represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  if (window.DOMParser) {\r\n    net.parseXML = function(text) {\r\n      return new DOMParser().parseFromString(text, 'text/xml');\r\n    };\r\n  } else {\r\n    net.parseXML = function(text) {\r\n      var xml = new ActiveXObject('Microsoft.XMLDOM');\r\n      xml.async = 'false';\r\n      xml.loadXML(text);\r\n      return xml;\r\n    };\r\n  }\r\n\r\n  /**\r\n    * Creates an Ajax request.  Returns an object that can be used\r\n    * to chain calls.  For example:\r\n    *\r\n    *      $t.post('/post-test')\r\n    *        .data({ key: 'value' })\r\n    *        .end(function(res) {\r\n    *          assert.equal('value', res.responseText);\r\n    *        });\r\n    *\r\n    *      $t.get('/get-test')\r\n    *        .set('Accept', 'text/html')\r\n    *        .end(function(res) {\r\n    *          assert.equal('Sample text', res.responseText);\r\n    *        });\r\n    *\r\n    * The available chained methods are:\r\n    *\r\n    * `set` -- set a HTTP header\r\n    * `data` -- the postBody\r\n    * `end` -- send the request over the network, and calls your callback with a `res` object\r\n    * `send` -- sends the request and calls `data`: `.send({ data: value }, function(res) { });`\r\n    *\r\n    * @param {String} The URL to call\r\n    * @param {Object} Optional settings\r\n    * @returns {Object} A chainable object for further configuration\r\n    */\r\n  function ajax(url, options) {\r\n    var request = xhr(),\r\n        promise,\r\n        then,\r\n        response = {},\r\n        chain;\r\n    if (connectsdk.Promise) {\r\n      promise = new connectsdk.Promise();\r\n    }\r\n\r\n\r\n    function respondToReadyState(readyState) {\r\n      if (request.readyState == 4) {\r\n        var contentType = request.mimeType || request.getResponseHeader('content-type') || '';\r\n\r\n        response.status = request.status;\r\n        response.responseText = request.responseText;\r\n        if (/json/.test(contentType)) {\r\n          response.responseJSON = net.parseJSON(request.responseText);\r\n        } else if (/xml/.test(contentType)) {\r\n          response.responseXML = net.parseXML(request.responseText);\r\n      \t}\r\n\r\n        response.success = successfulRequest(request);\r\n\r\n        if (options.callback) {\r\n          return options.callback(response, request);\r\n        }\r\n\r\n        if (response.success) {\r\n          if (options.success) options.success(response, request);\r\n          if (promise) promise.resolve(response, request);\r\n        } else {\r\n          if (options.error) options.error(response, request);\r\n          if (promise) promise.reject(response, request);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Set the HTTP headers\r\n    function setHeaders() {\r\n      var defaults = {\r\n        'Accept': 'text/javascript, application/json, text/html, application/xml, text/xml, */*',\r\n        'Content-Type': 'application/json'\r\n      };\r\n\r\n      /**\r\n       * Merge headers with defaults.\r\n       */\r\n      for (var name in defaults) {\r\n        if (!options.headers.hasOwnProperty(name))\r\n          options.headers[name] = defaults[name];\r\n      }\r\n      for (var name in options.headers) {\r\n        request.setRequestHeader(name, options.headers[name]);\r\n      }\r\n\r\n    }\r\n\r\n    if (typeof options === 'undefined') options = {};\r\n\r\n    options.method = options.method ? options.method.toLowerCase() : 'get';\r\n    options.asynchronous = options.asynchronous || true;\r\n    options.postBody = options.postBody || '';\r\n    request.onreadystatechange = respondToReadyState;\r\n    request.open(options.method, url, options.asynchronous);\r\n\r\n    options.headers = options.headers || {};\r\n    if (options.contentType) {\r\n      options.headers['Content-Type'] = options.contentType;\r\n    }\r\n\r\n    if (typeof options.postBody !== 'string') {\r\n      // Serialize JavaScript\r\n      options.postBody = net.serialize(options.postBody);\r\n    }\r\n\r\n    // setHeaders();\r\n\r\n    function send() {\r\n      try {\r\n      \tsetHeaders();\r\n        request.send(options.postBody);\r\n      } catch (e) {\r\n        if (options.error) {\r\n          options.error();\r\n        }\r\n      }\r\n    }\r\n\r\n    chain = {\r\n      set: function(key, value) {\r\n        options.headers[key] = value;\r\n        return chain;\r\n      },\r\n\r\n      send: function(data, callback) {\r\n        options.postBody = net.serialize(data);\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      end: function(callback) {\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      data: function(data) {\r\n        options.postBody = net.serialize(data);\r\n        return chain;\r\n      },\r\n\r\n      then: function() {\r\n        chain.end();\r\n        if (promise) promise.then.apply(promise, arguments);\r\n        return chain;\r\n      }\r\n    };\r\n\r\n    return chain;\r\n  }\r\n\r\n  function JSONPCallback(url, success, failure) {\r\n    var self = this;\r\n    this.url = url;\r\n    this.methodName = '__connectsdk_jsonp_' + parseInt(new Date().getTime());\r\n    this.success = success;\r\n    this.failure = failure;\r\n\r\n    function runCallback(json) {\r\n      self.success(json);\r\n      self.teardown();\r\n    }\r\n\r\n    window[this.methodName] = runCallback;\r\n  }\r\n\r\n  JSONPCallback.prototype.run = function() {\r\n    this.scriptTag = document.createElement('script');\r\n    this.scriptTag.id = this.methodName;\r\n    this.scriptTag.src = this.url.replace('{callback}', this.methodName);\r\n    var that = this;\r\n    this.scriptTag.onerror = function() {\r\n    \tthat.failure();\r\n    };\r\n    document.body.appendChild(this.scriptTag);\r\n  };\r\n\r\n  JSONPCallback.prototype.teardown = function() {\r\n    window[this.methodName] = null;\r\n    try {\r\n    \tdelete window[this.methodName];\r\n    } catch (e) {}\r\n    if (this.scriptTag) {\r\n      document.body.removeChild(this.scriptTag);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * An Ajax GET request.\r\n   *\r\n   *      $t.get('/get-test')\r\n   *        .set('Accept', 'text/html')\r\n   *        .end(function(res) {\r\n   *          assert.equal('Sample text', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options\r\n   * @returns {Object} A chainable object for further configuration\r\n   */\r\n  net.get = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'get';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * An Ajax POST request.\r\n   *\r\n   *      $t.post('/post-test')\r\n   *        .data({ key: 'value' })\r\n   *        .end(function(res) {\r\n   *          assert.equal('value', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options (`postBody` may come in handy here)\r\n   * @returns {Object} An object for further chaining with promises\r\n   */\r\n  net.post = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'post';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * A jsonp request.  Example:\r\n   *\r\n   *     var url = 'http://feeds.delicious.com/v1/json/';\r\n   *     url += 'alex_young/javascript?callback={callback}';\r\n   *\r\n   *     connectsdk.net.jsonp(url, {\r\n   *       success: function(json) {\r\n   *         console.log(json);\r\n   *       }\r\n   *     });\r\n   *\r\n   * @param {String} url The URL to request\r\n   */\r\n  net.jsonp = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    var callback = new JSONPCallback(url, options.success, options.failure);\r\n    callback.run();\r\n  };\r\n\r\n  /**\r\n    * The Ajax methods are mapped to the `connectsdk` object:\r\n    *\r\n    *      connectsdk.get();\r\n    *      connectsdk.post();\r\n    *      connectsdk.json();\r\n    *\r\n    */\r\n  connectsdk.get = net.get;\r\n  connectsdk.post = net.post;\r\n  connectsdk.jsonp = net.jsonp;\r\n\r\n  net.ajax = ajax;\r\n  connectsdk.net = net;\r\n  return net;\r\n});","define(\"connectsdk.Util\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Util = function() {\r\n\t\tthis.getMetadata = function() {\r\n\t\t\treturn {\r\n\t\t\t\tscreenSize : window.innerWidth + \"x\" + window.innerHeight,\r\n\t\t\t\tplatformIdentifier : window.navigator.userAgent,\r\n\t\t\t\tsdkIdentifier : ((document.GC && document.GC.rppEnabledPage) ? 'rpp-' : '') + 'JavaScriptClientSDK/v${version}',\r\n\t\t\t\tsdkCreator: 'Ingenico'\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tthis.base64Encode = function(data) {\r\n\t\t\tif (typeof data === \"object\") {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdata = JSON.stringify(data);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tthrow \"data must be either a String or a JSON object\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\t\t\tvar o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', tmp_arr = [];\r\n\r\n\t\t\tif (!data) {\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\r\n\t\t\tdo {// pack three octets into four hexets\r\n\t\t\t\to1 = data.charCodeAt(i++);\r\n\t\t\t\to2 = data.charCodeAt(i++);\r\n\t\t\t\to3 = data.charCodeAt(i++);\r\n\r\n\t\t\t\tbits = o1 << 16 | o2 << 8 | o3;\r\n\r\n\t\t\t\th1 = bits >> 18 & 0x3f;\r\n\t\t\t\th2 = bits >> 12 & 0x3f;\r\n\t\t\t\th3 = bits >> 6 & 0x3f;\r\n\t\t\t\th4 = bits & 0x3f;\r\n\r\n\t\t\t\t// use hexets to index into b64, and append result to encoded string\r\n\t\t\t\ttmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\r\n\t\t\t} while (i < data.length);\r\n\r\n\t\t\tenc = tmp_arr.join('');\r\n\r\n\t\t\tvar r = data.length % 3;\r\n\r\n\t\t\treturn ( r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\r\n\t\t};\r\n\t};\r\n\tconnectsdk.Util = Util;\r\n\treturn Util;\r\n});","define(\"connectsdk.PublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PublicKeyResponse = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.keyId = json.keyId;\r\n\t\tthis.publicKey = json.publicKey;\r\n\t};\r\n\r\n\tconnectsdk.PublicKeyResponse = PublicKeyResponse;\r\n\treturn PublicKeyResponse;\r\n});","define(\"connectsdk.C2SCommunicatorConfiguration\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n    var C2SCommunicatorConfiguration = function (sessionDetails) {\r\n        this.endpoints = {\r\n                            PROD: {\r\n                                EU: {\r\n                                    API: \"https://api-eu.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay1.poweredbyglobalcollect.com\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://api-us.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay2.poweredbyglobalcollect.com\"\r\n                                }\r\n                            }\r\n                            ,PREPROD: {\r\n                                EU: {\r\n                                    API: \"https://api-eu-preprod.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay1.preprod.poweredbyglobalcollect.com\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://api-us-preprod.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay2.preprod.poweredbyglobalcollect.com\"\r\n                                }\r\n                            }\r\n                            ,SANDBOX: {\r\n                                EU: {\r\n                                    API: \"https://api-eu-sandbox.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay1.sandbox.poweredbyglobalcollect.com\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://api-us-sandbox.globalcollect.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay2.sandbox.poweredbyglobalcollect.com\"\r\n                                }\r\n                            }\r\n\r\n                            // Non public settings. Only needed in GC development environment. Do not use\r\n                            // these, they will not work outside GC.\r\n                            ,INTEGRATION: {\r\n                                EU: {\r\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                            }\r\n                            ,DEV_NAMI: {\r\n                                EU: {\r\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                            }\r\n                            ,DEV_ISC: {\r\n                                EU: {\r\n                                    API: \"http://api.gc-dev.isaac.local/client/v1\"\r\n                                    ,ASSETS: \"http://rpp.gc-dev.isaac.local\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"http://api.gc-dev.isaac.local/client/v1\"\r\n                                    ,ASSETS: \"http://rpp.gc-dev.isaac.local\"\r\n                                }\r\n                            }\r\n                        };\r\n\r\n        this.region = sessionDetails.region;\r\n        this.environment = sessionDetails.environment || 'RPP'; // in case this is used in the RPP; the RPP will override the endpoints; by using the apiBaseUrl\r\n        this.clientSessionId = sessionDetails.clientSessionID;\r\n        this.customerId = sessionDetails.customerId;\r\n        this.apiBaseUrl = (sessionDetails.apiBaseUrl || sessionDetails.apiBaseUrl === '') ? sessionDetails.apiBaseUrl : this.endpoints[this.environment][this.region].API;\r\n        this.assetsBaseUrl = (sessionDetails.assetsBaseUrl || sessionDetails.assetsBaseUrl === '' ) ? sessionDetails.assetsBaseUrl : this.endpoints[this.environment][this.region].ASSETS;\r\n    };\r\n\r\n    connectsdk.C2SCommunicatorConfiguration = C2SCommunicatorConfiguration;\r\n    return C2SCommunicatorConfiguration;\r\n});","define(\"connectsdk.IinDetailsResponse\", [\"connectsdk.core\", \"connectsdk.promise\"], function(connectsdk, Promise) {\r\n\r\n\tvar IinDetailsResponse = function () {\r\n\t\tthis.status = '';\r\n\t\tthis.countryCode = '';\r\n\t\tthis.paymentProductId = '';\r\n\t\tthis.isAllowedInContext = '';\r\n\t\tthis.coBrands = [];\r\n\t};\r\n\tconnectsdk.IinDetailsResponse = IinDetailsResponse;\r\n\treturn IinDetailsResponse;\r\n});","define(\"connectsdk.C2SCommunicator\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.net\", \"connectsdk.Util\", \"connectsdk.PublicKeyResponse\", \"connectsdk.IinDetailsResponse\"], function(connectsdk, Promise, Net, Util, PublicKeyResponse, IinDetailsResponse) {\r\n\tvar C2SCommunicator = function(c2SCommunicatorConfiguration, paymentProduct) {\r\n\t\tvar _c2SCommunicatorConfiguration = c2SCommunicatorConfiguration;\r\n\t\tvar _util = new Util();\r\n\t\tvar _cache = {};\r\n\t\tvar _providedPaymentProduct = paymentProduct;\r\n\t\tvar that = this;\r\n\r\n\t\tvar _mapType = {\r\n\t\t\t\"expirydate\" : \"tel\",\r\n\t\t\t\"string\" : \"text\",\r\n\t\t\t\"numericstring\" : \"tel\",\r\n\t\t\t\"integer\" : \"number\",\r\n\t\t\t\"expirationDate\" : \"tel\"\r\n\t\t};\r\n\r\n\t\tvar _cleanJSON = function(json, url) {\r\n\t\t\tfor (var i = 0, il = json.fields.length; i < il; i++) {\r\n\t\t\t\tvar field = json.fields[i];\r\n\t\t\t\tfield.type = (field.displayHints.obfuscate) ? \"password\" : _mapType[field.type];\r\n\t\t\t\t// helper code for templating tools like Handlebars\r\n\t\t\t\tfor (validatorKey in field.dataRestrictions.validators) {\r\n\t\t\t\t\tfield.validators = field.validators || [];\r\n\t\t\t\t\tfield.validators.push(validatorKey);\r\n\t\t\t\t}\r\n\t\t\t\tif (field.displayHints.formElement.type === 'list') {\r\n\t\t\t\t\tfield.displayHints.formElement.list = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// full image paths\r\n\t\t\t\tif (field.displayHints.tooltip && field.displayHints.tooltip.image) {\r\n\t\t\t\t\tfield.displayHints.tooltip.image = url + \"/\" + field.displayHints.tooltip.image;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// apply sortorder\r\n\t\t\tjson.fields.sort(function(a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\t// set full image path\r\n\t\t\tjson.displayHints.logo = url + \"/\" + json.displayHints.logo;\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _extendLogoUrl = function(json, url, postfix) {\r\n\t\t\tfor (var i = 0, il = json[\"paymentProduct\" + postfix].length; i < il; i++) {\r\n\t\t\t\tvar product = json[\"paymentProduct\" + postfix][i];\r\n\t\t\t\tproduct.displayHints.logo = url + \"/\" + product.displayHints.logo;\r\n\t\t\t}\r\n\t\t\tjson[\"paymentProduct\" + postfix].sort(function(a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar metadata = _util.getMetadata();\r\n\r\n\t\tthis.getBasicPaymentProducts = function(context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t,cacheBust = new Date().getTime()\r\n\t\t\t\t,cacheKey = \"getPaymentProducts-\"  + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t    + context.locale + \"_\" + context.isRecurring + \"_\" + context.currency;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t    + \"/products\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t    + \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t    + \"&hide=fields&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t.end(function(res) {\r\n\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetsBaseUrl, \"s\");\r\n\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function(context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t,cacheBust = new Date().getTime()\r\n\t\t\t\t,cacheKey = \"getPaymentProductGroups-\"  + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t    + context.locale + \"_\" + context.isRecurring + \"_\" + context.currency;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t    + \"/productgroups\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t    + \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t    + \"&hide=fields&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t.end(function(res) {\r\n\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetsBaseUrl, \"Groups\");\r\n\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function(paymentProductId, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t,cacheBust = new Date().getTime()\r\n\t\t\t\t,cacheKey = \"getPaymentProduct-\" + paymentProductId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t    + context.countryCode + \"_\" + \"_\" + context.locale + \"_\" + context.isRecurring + \"_\"\r\n\t\t\t\t    + context.currency;\r\n\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductId) {\r\n\t\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar json = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t    + \"/products/\" + paymentProductId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t    + \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t    + \"&currencyCode=\" + context.currency + \"&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t.end(function(res) {\r\n\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function(paymentProductGroupId, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t,cacheBust = new Date().getTime()\r\n\t\t\t\t,cacheKey = \"getPaymentProductGroup-\" + paymentProductGroupId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t    + context.countryCode + \"_\" + \"_\" + context.locale + \"_\" + context.isRecurring + \"_\"\r\n\t\t\t\t    + context.currency;\r\n\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductGroupId) {\r\n\t\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar json = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t    + \"/productgroups/\" + paymentProductGroupId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t    + \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t    + \"&currencyCode=\" + context.currency + \"&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t.end(function(res) {\r\n\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductIdByCreditCardNumber = function(partialCreditCardNumber, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t     ,iinDetailsResponse = new IinDetailsResponse()\r\n\t\t\t     ,cacheKey = \"getPaymentProductIdByCreditCardNumber-\" + partialCreditCardNumber;\r\n\r\n\t\t\tvar that = this;\r\n\t\t\tthis.context = context;\r\n\t\t\tif (_cache[cacheKey]) {// cache is based on digit 1-6\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar isEnoughDigits = function(partialCreditCardNumber) {\r\n\t\t\t\t\tif (partialCreditCardNumber.length < 6) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t};\r\n\t\t\t\tif (isEnoughDigits(partialCreditCardNumber)) {\r\n\t\t\t\t\tNet.post(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/services/getIINdetails\")\r\n\t\t\t\t\t.data(JSON.stringify(this.convertContextToIinDetailsContext(partialCreditCardNumber, this.context)))\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function(res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tiinDetailsResponse.json = res.responseJSON;\r\n\t\t\t\t\t\t\tiinDetailsResponse.countryCode = res.responseJSON.countryCode;\r\n\t\t\t\t\t\t\tiinDetailsResponse.paymentProductId = res.responseJSON.paymentProductId;\r\n\t\t\t\t\t\t\tiinDetailsResponse.isAllowedInContext = res.responseJSON.isAllowedInContext;\r\n\t\t\t\t\t\t\tiinDetailsResponse.coBrands = res.responseJSON.coBrands;\r\n\t\t\t\t\t\t\t// check if this card is supported\r\n\t\t\t\t\t\t\t// if isAllowedInContext is available in the response set status and resolve\r\n\t\t\t\t\t\t\tif(res.responseJSON.hasOwnProperty('isAllowedInContext')){\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\tif (iinDetailsResponse.isAllowedInContext === false) {\r\n\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"EXISTING_BUT_NOT_ALLOWED\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t//if isAllowedInContext is not available get the payment product again to determine status and resolve\r\n\t\t\t\t\t\t\t\tthat.getPaymentProduct(iinDetailsResponse.paymentProductId, that.context).then(function (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\tif (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNSUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tiinDetailsResponse.status = \"NOT_ENOUGH_DIGITS\";\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertContextToIinDetailsContext = function (partialCreditCardNumber, context) {\r\n\t\t\treturn {\r\n\t\t\t\t\"bin\": partialCreditCardNumber,\r\n\t\t\t\t\"paymentContext\": {\r\n\t\t\t\t\t\"countryCode\": context.countryCode,\r\n\t\t\t\t\t\"isRecurring\": context.isRecurring,\r\n\t\t\t\t\t\"amountOfMoney\": {\r\n\t\t\t\t\t\t\"amount\": context.totalAmount,\r\n\t\t\t\t\t\t\"currencyCode\": context.currency\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function() {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t ,cacheKey = \"publicKey\";\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/crypto/publickey\")\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function(res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar publicKeyResponse = new PublicKeyResponse(res.responseJSON);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = publicKeyResponse;\r\n\t\t\t\t\t\t\tpromise.resolve(publicKeyResponse);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to get public key\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function(paymentProductId, currencyCode, countryCode) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t ,cacheKey = \"getPaymentProductDirectory-\" + paymentProductId + \"_\" + currencyCode + \"_\" + countryCode;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/directory?countryCode=\" +  countryCode + \"&currencyCode=\" + currencyCode)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function(res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to retrieve payment product directory\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function(amount, source, target) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t ,cacheKey = \"convertAmount-\" + amount + \"_\" + source + \"_\" + target;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/services/convert/amount?source=\" + source + \"&target=\" + target + \"&amount=\" + amount)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function(res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to convert amount\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t};\r\n\r\n\r\n\tconnectsdk.C2SCommunicator = C2SCommunicator;\r\n\treturn C2SCommunicator;\r\n});","define(\"connectsdk.LabelTemplateElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar LabelTemplateElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.attributeKey = json.attributeKey;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.LabelTemplateElement = LabelTemplateElement;\r\n\treturn LabelTemplateElement;\r\n});","define(\"connectsdk.Attribute\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Attribute = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.key = json.key;\r\n\t\tthis.value = json.value;\r\n\t\tthis.status = json.status;\r\n\t\tthis.mustWriteReason = json.mustWriteReason;\r\n\t};\r\n\r\n\tconnectsdk.Attribute = Attribute;\r\n\treturn Attribute;\r\n});","define(\"connectsdk.AccountOnFileDisplayHints\", [\"connectsdk.core\", \"connectsdk.LabelTemplateElement\"], function(connectsdk, LabelTemplateElement) {\r\n\r\n\tvar _parseJSON = function (_json, _labelTemplate, _labelTemplateElementByAttributeKey) {\r\n\t\tif (_json.labelTemplate) {\r\n\t\t\tfor (var i = 0, l = _json.labelTemplate.length; i < l; i++) {\r\n\t\t\t\tvar labelTemplateElement = new LabelTemplateElement(_json.labelTemplate[i]);\r\n\t\t\t\t_labelTemplate.push(labelTemplateElement);\r\n\t\t\t\t_labelTemplateElementByAttributeKey[labelTemplateElement.attributeKey] = labelTemplateElement;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFileDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.labelTemplate = [];\r\n\t\tthis.labelTemplateElementByAttributeKey = {};\r\n\r\n\t\t_parseJSON(json, this.labelTemplate, this.labelTemplateElementByAttributeKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFileDisplayHints = AccountOnFileDisplayHints;\r\n\treturn AccountOnFileDisplayHints;\r\n});","define(\"connectsdk.AccountOnFile\", [\"connectsdk.core\" ,\"connectsdk.AccountOnFileDisplayHints\", \"connectsdk.Attribute\"], function(connectsdk, AccountOnFileDisplayHints, Attribute) {\r\n\r\n\tvar _parseJSON = function (_json, _attributes, _attributeByKey) {\r\n\t\tif (_json.attributes) {\r\n\t\t\tfor (var i = 0, l = _json.attributes.length; i < l; i++) {\r\n\t\t\t\tvar attribute = new Attribute(_json.attributes[i]);\r\n\t\t\t\t_attributes.push(attribute);\r\n\t\t\t\t_attributeByKey[attribute.key] = attribute;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFile = function (json) {\r\n\t\tvar that = this;\r\n\t\tthis.json = json;\r\n\t\tthis.attributes = [];\r\n\t\tthis.attributeByKey = {};\r\n\t\tthis.displayHints = new AccountOnFileDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.paymentProductId = json.paymentProductId;\r\n\r\n\t\tthis.getMaskedValueByAttributeKey = function(attributeKey) {\r\n\t\t\tvar value = this.attributeByKey[attributeKey].value;\r\n\t\t\tvar wildcardMask;\r\n\t\t\ttry {\r\n\t\t\t\twildcardMask = this.displayHints.labelTemplateElementByAttributeKey[attributeKey].wildcardMask;\r\n\t\t\t} catch (e) {}\r\n\t\t\tif (value !== undefined && wildcardMask !== undefined) {\r\n\t\t\t\tvar maskingUtil = new connectsdk.MaskingUtil();\r\n\t\t\t\treturn maskingUtil.applyMask(wildcardMask, value);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t};\r\n\r\n\t\t_parseJSON(json, this.attributes, this.attributeByKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFile = AccountOnFile;\r\n\treturn AccountOnFile;\r\n});","define(\"connectsdk.PaymentProductDisplayHints\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProductDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayOrder = json.displayOrder;\r\n\t\tthis.label = json.label;\r\n\t\tthis.logo = json.logo;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductDisplayHints = PaymentProductDisplayHints;\r\n\treturn PaymentProductDisplayHints;\r\n});","define(\"connectsdk.BasicPaymentProduct\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\r\n\r\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProduct = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"product\";\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.allowsRecurring = json.allowsRecurring;\r\n\t\tthis.allowsTokenization = json.allowsTokenization;\r\n\t\tthis.autoTokenized  = json.autoTokenized ;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.maxAmount = json.maxAmount;\r\n\t\tthis.minAmount = json.minAmount;\r\n\t\tthis.paymentMethod = json.paymentMethod;\r\n\t\tthis.mobileIntegrationLevel = json.mobileIntegrationLevel;\r\n\t\tthis.usesRedirectionTo3rdParty = json.usesRedirectionTo3rdParty;\r\n\t\tthis.paymentProductGroup = json.paymentProductGroup;\r\n\r\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProduct = BasicPaymentProduct;\r\n\treturn BasicPaymentProduct;\r\n});","define(\"connectsdk.BasicPaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\r\n\r\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroup = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"group\";\r\n\t\tthis.id = json.id;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroup = BasicPaymentProductGroup;\r\n\treturn BasicPaymentProductGroup;\r\n});","define(\"connectsdk.MaskedString\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar MaskedString = function(formattedValue, cursorIndex) {\r\n\r\n\t\tthis.formattedValue = formattedValue;\r\n\t\tthis.cursorIndex = cursorIndex;\r\n\t};\r\n\r\n\tconnectsdk.MaskedString = MaskedString;\r\n\treturn MaskedString;\r\n});","define(\"connectsdk.MaskingUtil\", [\"connectsdk.core\", \"connectsdk.MaskedString\"], function(connectsdk, MaskedString) {\r\n\r\n\tvar _fillBuffer = function(index, offset, buffer, tempMask, valuec) {\r\n\t\tif (index+offset < valuec.length && index < tempMask.length) {\r\n\t\t\tif ((tempMask[index] === \"9\" && Number(valuec[index+offset]) > -1 && valuec[index+offset] !== \" \") || tempMask[index] === \"*\") {\r\n\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t} else {\r\n\t\t\t\tif (valuec[index+offset] === tempMask[index]) {\r\n\t\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t\t} else if (tempMask[index] !== \"9\" && tempMask[index] !== \"*\") {\r\n\t\t\t\t\tbuffer.push(tempMask[index]);\r\n\t\t\t\t\toffset--;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// offset++;\r\n\t\t\t\t\tvaluec.splice(index+offset, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_fillBuffer(index+1, offset, buffer, tempMask, valuec);\r\n\t\t}\r\n\t};\r\n\r\n\tvar MaskingUtil = function () {\r\n\t\tthis.applyMask = function (mask, newValue, oldValue) {\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = newValue.split(\"\");\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\ttempMask = [];\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttempMask.push(c);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// tempmask now contains the replaceable chars and the non-replaceable masks at the correct index\r\n\t\t\t\t_fillBuffer(0, 0, buffer, tempMask, valuec);\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnewValue = buffer.join(\"\");\r\n\t\t\tvar cursor = 1;\r\n\t\t\t// calculate the cursor index\r\n\t\t\tif (oldValue) {\r\n\t\t\t\tvar tester = oldValue.split(\"\");\r\n\t\t\t\tfor (var i = 0, il = buffer.length; i < il; i++) {\r\n\t\t\t\t\tif (buffer[i] !== tester[i]) {\r\n\t\t\t\t\t\tcursor = i+1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (newValue.substring(0, newValue.length -1) === oldValue) {\r\n\t\t\t\tcursor = newValue.length + 1;\r\n\t\t\t}\r\n\t\t\treturn new MaskedString(newValue, cursor);\r\n\t\t};\r\n\t\t\r\n\t\tthis.getMaxLengthBasedOnMask = function (mask) {\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tnewLength = -1;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tnewLength++;\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tnewLength--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newLength;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.removeMask = function (mask, value) {\r\n\t\t\t// remove the mask from the masked input\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = (value) ? value.split(\"\") : [];\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tvalueIndex = -1,\r\n\t\t\t\t\t\tinMask = false;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tvalueIndex++;\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tvalueIndex--;\r\n\t\t\t\t\t\tif (c === \"{\") {\r\n\t\t\t\t\t\t\tinMask = true;\r\n\t\t\t\t\t\t} else if (c === \"}\") {\r\n\t\t\t\t\t\t\tinMask = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (inMask && valuec[valueIndex]) {\r\n\t\t\t\t\t\t\tbuffer.push(valuec[valueIndex]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn buffer.join(\"\").trim();\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.MaskingUtil = MaskingUtil;\r\n\treturn MaskingUtil;\r\n});","define(\"connectsdk.ValidationRuleLuhn\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLuhn = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.validate = function (value) {\r\n\t\t\tvar luhnArr = [[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]]\r\n\t\t\t\t,sum = 0;\r\n\t\t\t\t\r\n\t   \t\tvalue.replace(/\\D+/g,\"\").replace(/[\\d]/g, function(c, p, o) {\r\n\t\t        sum += luhnArr[ (o.length-p)&1 ][ parseInt(c,10) ];\r\n\t\t    });\r\n\t\t    return (sum%10 === 0) && (sum > 0);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLuhn = ValidationRuleLuhn;\r\n\treturn ValidationRuleLuhn;\r\n});","define(\"connectsdk.ValidationRuleExpirationDate\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\tvar _validateDateFormat = function (value) {\r\n\t\tvar pattern = /\\d{4}|\\d{6}$/g;\r\n\t\treturn pattern.test(value);\r\n\t};\r\n\r\n\tvar ValidationRuleExpirationDate = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\t\tthis.errorMessageId = json.type;\r\n\r\n\t\t// value is mmYY or mmYYYY\r\n\t\tthis.validate = function (value) {\r\n\t\t\tvalue = value.replace(/[^\\d]/g, '');\r\n\t\t\tif (value.length === 4) {\r\n\t\t\t\tsplit = [value.substring(0, 2), \"20\" + value.substring(2, 4)];\r\n\t\t\t} else if (value.length === 6) {\r\n\t\t\t\tsplit = [value.substring(0, 2), value.substring(2, 6)];\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (_validateDateFormat(value)) {\r\n\t\t\t\tvar now = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\r\n\t\t\t\tvar expirationDate = new Date(split[1], split[0] - 1, 1);\r\n\t\t\t\tif (expirationDate.getMonth() !== Number(split[0] - 1) || expirationDate.getFullYear() !== Number(split[1])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn expirationDate >= now; // the expiration month could be THIS month but that is still valid!\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleExpirationDate = ValidationRuleExpirationDate;\r\n\treturn ValidationRuleExpirationDate;\r\n});","define(\"connectsdk.ValidationRuleFixedList\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleFixedList = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.allowedValues = json.attributes.allowedValues;\r\n\t\t\r\n\t\tthis.validate = function (value) {\r\n\t\t\tfor (var i = 0, il = this.allowedValues.length; i < il; i++) {\r\n\t\t\t\tif (this.allowedValues[i] === value) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleFixedList = ValidationRuleFixedList;\r\n\treturn ValidationRuleFixedList;\r\n});","define(\"connectsdk.ValidationRuleLength\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLength = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxLength = json.attributes.maxLength;\r\n\t\tthis.minLength = json.attributes.minLength;\r\n\t\t\r\n\t\tthis.validate = function (value) {\r\n\t\t\treturn this.minLength <= value.length && value.length <= this.maxLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLength = ValidationRuleLength;\r\n\treturn ValidationRuleLength;\r\n});","define(\"connectsdk.ValidationRuleRange\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRange = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxValue = json.attributes.maxValue;\r\n\t\tthis.minValue = json.attributes.minValue;\r\n\t\t\r\n\t\tthis.validate = function(value) {\r\n\t\t\tif (isNaN(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = Number(value);\r\n\t\t\treturn this.minValue <= value && value <= this.maxValue;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRange = ValidationRuleRange;\r\n\treturn ValidationRuleRange;\r\n});","define(\"connectsdk.ValidationRuleRegularExpression\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRegularExpression = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.regularExpression = json.attributes.regularExpression;\r\n\t\t\r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(this.regularExpression);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRegularExpression = ValidationRuleRegularExpression;\r\n\treturn ValidationRuleRegularExpression;\r\n});","define(\"connectsdk.ValidationRuleEmailAddress\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleEmailAddress = function(json) {\r\n        this.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        \r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(/^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleEmailAddress = ValidationRuleEmailAddress;\r\n\treturn ValidationRuleEmailAddress;\r\n});","define(\"connectsdk.ValidationRuleFactory\", [\"connectsdk.core\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\"], function(connectsdk, ValidationRuleEmailAddress, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression) {\r\n\r\n\tvar ValidationRuleFactory = function () {\r\n\t    \r\n\t    this.makeValidator = function(json) {\r\n            // create new class based on the rule\r\n            var classType = json.type.charAt(0).toUpperCase() + json.type.slice(1), // camel casing\r\n                className = eval(\"ValidationRule\" + classType);\r\n            return new className(json);\r\n        };\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleFactory = ValidationRuleFactory;\r\n\treturn ValidationRuleFactory;\r\n});","define(\"connectsdk.DataRestrictions\", [\"connectsdk.core\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleFactory\"], function(connectsdk, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleEmailAddress, ValidationRuleFactory) {\r\n\r\n\tvar DataRestrictions = function (json, mask) {\r\n\r\n\t\tvar _parseJSON = function (_json, _validationRules, _validationRuleByType) {\r\n\t\t    var validationRuleFactory = new ValidationRuleFactory();\r\n\t\t\tif (_json.validators) {\r\n\t\t\t\tfor (var key in _json.validators) {\r\n\t\t\t\t\tvar validationRule = validationRuleFactory.makeValidator({type: key, attributes: _json.validators[key]});\r\n\t\t\t\t\t_validationRules.push(validationRule);\r\n\t\t\t\t\t_validationRuleByType[validationRule.type] = validationRule;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.isRequired = json.isRequired;\r\n\t\tthis.validationRules = [];\r\n\t\tthis.validationRuleByType = {};\r\n\t\t\r\n\t\t_parseJSON(json, this.validationRules, this.validationRuleByType);\r\n\t};\r\n\r\n\tconnectsdk.DataRestrictions = DataRestrictions;\r\n\treturn DataRestrictions;\r\n});","define(\"connectsdk.ValueMappingElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValueMappingElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayName = json.displayName;\r\n\t\tthis.value = json.value;\r\n\t};\r\n\r\n\tconnectsdk.ValueMappingElement = ValueMappingElement;\r\n\treturn ValueMappingElement;\r\n});","define(\"connectsdk.FormElement\", [\"connectsdk.core\", \"connectsdk.ValueMappingElement\"], function(connectsdk, ValueMappingElement) {\r\n\r\n\tvar FormElement = function (json) {\r\n\r\n\t\tvar _parseJSON = function (_json, _valueMapping) {\r\n\t\t\tif (_json.valueMapping) {\r\n\t\t\t\tfor (var i = 0, l = _json.valueMapping.length; i < l; i++) {\r\n\t\t\t\t\t_valueMapping.push(new ValueMappingElement(_json.valueMapping[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type;\r\n\t\tthis.valueMapping = [];\r\n\t\t\r\n\t\t_parseJSON(json, this.valueMapping);\r\n\t};\r\n\r\n\tconnectsdk.FormElement = FormElement;\r\n\treturn FormElement;\r\n});","define(\"connectsdk.Tooltip\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Tooltip = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.image = json.image;\r\n\t\tthis.label = json.label;\r\n\t};\r\n\r\n\tconnectsdk.Tooltip = Tooltip;\r\n\treturn Tooltip;\r\n});","define(\"connectsdk.PaymentProductFieldDisplayHints\", [\"connectsdk.core\", \"connectsdk.Tooltip\", \"connectsdk.FormElement\"], function(connectsdk, Tooltip, FormElement) {\r\n\r\n\tvar PaymentProductFieldDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n \t\tthis.displayOrder = json.displayOrder;\r\n\t\tthis.formElement = new FormElement(json.formElement);\r\n\t\tthis.label = json.label;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.obfuscate = json.obfuscate;\r\n\t\tthis.placeholderLabel = json.placeholderLabel;\r\n\t\tthis.preferredInputType = json.preferredInputType;\r\n\t\tthis.tooltip = json.tooltip? new Tooltip(json.tooltip): undefined;\r\n\t\tthis.alwaysShow = json.alwaysShow;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductFieldDisplayHints = PaymentProductFieldDisplayHints;\r\n\treturn PaymentProductFieldDisplayHints;\r\n});","define(\"connectsdk.PaymentProductField\", [\"connectsdk.core\", \"connectsdk.PaymentProductFieldDisplayHints\", \"connectsdk.DataRestrictions\", \"connectsdk.MaskingUtil\"], function(connectsdk, PaymentProductFieldDisplayHints, DataRestrictions, MaskingUtil) {\r\n\tvar PaymentProductField = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayHints = new PaymentProductFieldDisplayHints(json.displayHints);\r\n\t\tthis.dataRestrictions = new DataRestrictions(json.dataRestrictions, this.displayHints.mask);\r\n\t\tthis.id = json.id;\r\n\t\tthis.type = json.type;\r\n\t\tvar _errorCodes = [];\r\n\r\n\t\tthis.getErrorCodes = function (value) {\r\n\t\t\tif (value) {\r\n\t\t\t\t_errorCodes = [];\r\n\t\t\t\tthis.isValid(value);\r\n\t\t\t}\r\n\t\t\treturn _errorCodes;\r\n\t\t};\r\n\t\tthis.isValid = function (value) {\r\n\t\t\t// isValid checks all datarestrictions\r\n\t\t\tvar validators = this.dataRestrictions.validationRules;\r\n\t\t\tvar hasError = false;\r\n\t\t\tvalue = this.removeMask(value);\r\n\t\t\tfor (var i = 0, il = validators.length; i < il; i++) {\r\n\t\t\t\tvar validator = validators[i];\r\n\t\t\t\tif (!validator.validate(value)) {\r\n\t\t\t\t\thasError = true;\r\n\t\t\t\t\t_errorCodes.push(validator.errorMessageId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn !hasError;\r\n\t\t};\r\n\t\tthis.applyMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.mask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.applyWildcardMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.wildcardMask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.removeMask = function (value) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.removeMask(this.displayHints.mask, value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductField = PaymentProductField;\r\n\treturn PaymentProductField;\r\n});","define(\"connectsdk.PaymentProduct\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProduct = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.json = json;\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct = PaymentProduct;\r\n\treturn PaymentProduct;\r\n});","define(\"connectsdk.PaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProductGroup = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.json = json;\r\n\t\tbasicPaymentProduct.json.type = \"group\";\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductGroup = PaymentProductGroup;\r\n\treturn PaymentProductGroup;\r\n});","define(\"connectsdk.BasicPaymentProducts\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\"], function(connectsdk, BasicPaymentProduct) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProducts, _accountsOnFile, _paymentProductById, _accountOnFileById, _paymentProductByAccountOnFileId) {\r\n\t\tif (_json.paymentProducts) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProducts.length; i < il; i++) {\r\n\t\t\t\tvar paymentProduct = new BasicPaymentProduct(_json.paymentProducts[i]);\r\n\t\t\t\t_paymentProducts.push(paymentProduct);\r\n\t\t\t\t_paymentProductById[paymentProduct.id] = paymentProduct;\r\n\r\n\t\t\t\tif (paymentProduct.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProduct.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t\t_paymentProductByAccountOnFileId[aof.id] = paymentProduct;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProducts = function (json) {\r\n\t\tthis.basicPaymentProducts = [];\r\n\t\tthis.basicPaymentProductById = {};\r\n\t\tthis.basicPaymentProductByAccountOnFileId = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProducts, this.accountsOnFile, this.basicPaymentProductById, this.accountOnFileById, this.basicPaymentProductByAccountOnFileId);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProducts = BasicPaymentProducts;\r\n\treturn BasicPaymentProducts;\r\n});","define(\"connectsdk.BasicPaymentProductGroups\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProductGroup\"], function(connectsdk, BasicPaymentProductGroup) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProductGroups, _accountsOnFile, _paymentProductGroupById, _accountOnFileById) {\r\n\t\tif (_json.paymentProductGroups) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductGroup = new BasicPaymentProductGroup(_json.paymentProductGroups[i]);\r\n\t\t\t\t_paymentProductGroups.push(paymentProductGroup);\r\n\t\t\t\t_paymentProductGroupById[paymentProductGroup.id] = paymentProductGroup;\r\n\r\n\t\t\t\tif (paymentProductGroup.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProductGroup.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroups = function (json) {\r\n\t\tthis.basicPaymentProductGroups = [];\r\n\t\tthis.basicPaymentProductGroupById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProductGroups, this.accountsOnFile, this.basicPaymentProductGroupById, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroups = BasicPaymentProductGroups;\r\n\treturn BasicPaymentProductGroups;\r\n});","define(\"connectsdk.BasicPaymentItems\", [\"connectsdk.core\"], function(connectsdk) {\r\n\t\"use strict\";\r\n\r\n\t\tvar _parseJson = function (_products, _groups, _basicPaymentItems) {\r\n\t\tvar doRemove = [];\r\n\t\tif (_groups) {\r\n\t\t\tfor (var i = 0, il = _groups.basicPaymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar groupId = _groups.basicPaymentProductGroups[i].id,\r\n\t\t\t\t\t\tgroupReplaced = false;\r\n\t\t\t\tfor (var j = 0, jl = _products.basicPaymentProducts.length; j < jl; j++) {\r\n\t\t\t\t\tvar productMethod = _products.basicPaymentProducts[j].paymentProductGroup;\r\n\t\t\t\t\tif (productMethod === groupId && groupReplaced === false) {\r\n\t\t\t\t\t\t// replace instance by group\r\n\t\t\t\t\t\t_products.basicPaymentProducts.splice(j, 1, _groups.basicPaymentProductGroups[i]);\r\n\t\t\t\t\t\tgroupReplaced = true;\r\n\t\t\t\t\t} else if (productMethod === groupId && groupReplaced === true) {\r\n\t\t\t\t\t\t// mark for removal\r\n\t\t\t\t\t\tdoRemove.push(j);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = doRemove.length -1, il = 0; i >= il; i--) {\r\n\t\t\t\t_products.basicPaymentProducts.splice(doRemove[i], 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t_basicPaymentItems.basicPaymentItems = JSON.parse(JSON.stringify(_products.basicPaymentProducts));\r\n\t\tfor (var i = 0, il = _basicPaymentItems.basicPaymentItems.length; i < il; i++) {\r\n\t\t\tvar basicPaymentItem = _basicPaymentItems.basicPaymentItems[i];\r\n\t\t\t_basicPaymentItems.basicPaymentItemById[basicPaymentItem.id] = basicPaymentItem;\r\n\t\t\tif (basicPaymentItem.accountsOnFile) {\r\n\t\t\t\tvar aofs = basicPaymentItem.accountsOnFile;\r\n\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t_basicPaymentItems.accountsOnFile.push(aof);\r\n\t\t\t\t\t_basicPaymentItems.accountOnFileById[aof.id] = aof;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tvar BasicPaymentItems = function (products, groups) {\r\n\t\tthis.basicPaymentItems = [];\r\n\t\tthis.basicPaymentItemById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJson(products, groups, this);\r\n\t};\r\n\tconnectsdk.BasicPaymentItems = BasicPaymentItems;\r\n\treturn BasicPaymentItems;\r\n});","define(\"connectsdk.PaymentRequest\", [\"connectsdk.core\"], function(connectsdk) {\r\n  var PaymentRequest = function(clientSessionID) {\r\n    var _clientSessionID = clientSessionID;\r\n    var _fieldValues = {};\r\n    var _paymentProduct = null;\r\n    var _accountOnFile = null;\r\n    var _tokenize = false;\r\n\r\n    this.isValid = function() {\r\n      var errors = this.getErrorMessageIds();\r\n      // besides checking the fields for errors check if all mandatory fields are present as well\r\n      var paymentProduct = this.getPaymentProduct();\r\n      if (!paymentProduct) {\r\n        return false;\r\n      }\r\n      var allRequiredFieldsPresent = true;\r\n      for (var i = 0; i < paymentProduct.paymentProductFields.length; i++) {\r\n        var field = paymentProduct.paymentProductFields[i];\r\n        if (field.dataRestrictions.isRequired) {\r\n          // is this field present in the request?\r\n          var storedValue = this.getValue(field.id);\r\n          if (!storedValue && !this.getAccountOnFile()) {\r\n              // if we have an acoount on file the account on file could have the field, so we can ignore it\r\n            allRequiredFieldsPresent = false;\r\n          }\r\n        }\r\n      }\r\n      return errors.length === 0 && allRequiredFieldsPresent;\r\n    };\r\n    this.setValue = function(paymentProductFieldId, value) {\r\n      _fieldValues[paymentProductFieldId] = value;\r\n    };\r\n    this.setTokenize = function(tokenize) {\r\n      _tokenize = tokenize;\r\n    };\r\n    this.getTokenize = function() {\r\n      return _tokenize;\r\n    };\r\n    this.getErrorMessageIds = function() {\r\n      var errors = [];\r\n      for (key in _fieldValues) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[key];\r\n        if (paymentProductField) {\r\n          errors = errors.concat(paymentProductField.getErrorCodes(_fieldValues[key]));\r\n        }\r\n      }\r\n      return errors;\r\n    };\r\n    this.getValue = function(paymentProductFieldId) {\r\n      return _fieldValues[paymentProductFieldId];\r\n    };\r\n    this.getValues = function() {\r\n      return _fieldValues;\r\n    };\r\n    this.getMaskedValue = function(paymentProductFieldId) {\r\n      var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n      var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n      return maskedString.formattedValue();\r\n    };\r\n    this.getMaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n        result[paymentProductFieldId] = maskedString.formattedValue;\r\n      }\r\n      return result;\r\n    };\r\n    this.getUnmaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        if (paymentProductField) {\r\n          var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n          var formattedValue = maskedString.formattedValue;\r\n          result[paymentProductFieldId] = paymentProductField.removeMask(formattedValue);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n    this.setPaymentProduct = function(paymentProduct) {\r\n      if (paymentProduct.type === \"group\") {\r\n        return;\r\n      }\r\n      _paymentProduct = paymentProduct;\r\n    };\r\n    this.getPaymentProduct = function() {\r\n      return _paymentProduct;\r\n    };\r\n    this.setAccountOnFile = function(accountOnFile) {\r\n      for (var i = 0, il = accountOnFile.attributes.length; i < il; i++) {\r\n        var attribute = accountOnFile.attributes[i];\r\n        delete _fieldValues[attribute.key];\r\n      }\r\n      _accountOnFile = accountOnFile;\r\n    };\r\n    this.getAccountOnFile = function() {\r\n      return _accountOnFile;\r\n    };\r\n    this.getClientSessionID = function() {\r\n\t\t    return clientSessionID;\r\n    };\r\n  };\r\n  connectsdk.PaymentRequest = PaymentRequest;\r\n  return PaymentRequest;\r\n});","define(\"connectsdk.C2SPaymentProductContext\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n  var C2SPaymentProductContext = function (payload) {\r\n\tthis.totalAmount = payload.totalAmount;\r\n\tthis.countryCode = payload.countryCode;\r\n\tthis.isRecurring = payload.isRecurring;\r\n\tthis.currency = payload.currency;\r\n\tthis.locale = payload.locale;\r\n  };\r\n\r\n  connectsdk.C2SPaymentProductContext = C2SPaymentProductContext;\r\n  return C2SPaymentProductContext;\r\n});","define(\"connectsdk.JOSEEncryptor\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar pki = forge.pki;\r\n\tvar asn1 = forge.asn1;\r\n\tvar CEKKEYLENGTH = 512;\r\n\tvar IVLENGTH = 128;\r\n\r\n\tvar base64UrlEncode = function(str) {\r\n\t\tstr = forge.util.encode64(str);\r\n\t\tstr = str.split('=')[0];\r\n\t\tstr = str.replace(/\\+/g, '-');\r\n\t\tstr = str.replace(/\\//g, '_');\r\n\t\treturn str;\r\n\t};\r\n\r\n\tvar createProtectedHeader = function(kid) {\r\n\t\tvar JOSEHeader = {\r\n\t\t\t\"alg\" : \"RSA-OAEP\",\r\n\t\t\t\"enc\" : \"A256CBC-HS512\",\r\n\t\t\t\"kid\" : kid\r\n\t\t};\r\n\t\treturn JSON.stringify(JOSEHeader);\r\n\t};\r\n\r\n\tvar decodePemPublicKey = function(publickeyB64Encoded) {\r\n\t\t// step 1: base64decode\r\n\t\tvar publickeyB64Decoded = forge.util.decode64(publickeyB64Encoded);\r\n\t\t// create a bytebuffer with these bytes\r\n\t\tvar buffer2 = forge.util.createBuffer(publickeyB64Decoded, 'raw');\r\n\t\t// convert DER to ASN1 object\r\n\t\tvar publickeyObject2 = forge.asn1.fromDer(buffer2);\r\n\t\t// convert to publicKey object\r\n\t\tvar publicKey2 = pki.publicKeyFromAsn1(publickeyObject2);\r\n\t\treturn publicKey2;\r\n\t};\r\n\r\n\tvar encryptContentEncryptionKey = function(CEK, publicKey) {\r\n\t\t// encrypt CEK with OAEP+SHA-1+MGF1Padding\r\n\t\tvar encryptedCEK = publicKey.encrypt(CEK, 'RSA-OAEP');\r\n\t\treturn encryptedCEK;\r\n\t};\r\n\r\n\tvar encryptPayload = function(payload, encKey, initializationVector) {\r\n\t\tvar cipher = forge.cipher.createCipher('AES-CBC', encKey);\r\n\t\tcipher.start({\r\n\t\t\tiv : initializationVector\r\n\t\t});\r\n\t\tcipher.update(forge.util.createBuffer(payload));\r\n\t\tcipher.finish();\r\n\t\treturn cipher.output.bytes();\r\n\t};\r\n\r\n\tvar calculateAdditionalAuthenticatedDataLength = function(encodededProtectedHeader) {\r\n\t\tvar buffer = forge.util.createBuffer(encodededProtectedHeader);\r\n\t\tvar lengthInBits = buffer.length() * 8;\r\n\r\n\t\tvar buffer2 = forge.util.createBuffer();\r\n\t\t// convert int to 64bit big endian\r\n\t\tbuffer2.putInt32(0);\r\n\t\tbuffer2.putInt32(lengthInBits);\r\n\t\treturn buffer2.bytes();\r\n\t};\r\n\r\n\tvar calculateHMAC = function(macKey, encodededProtectedHeader, initializationVector, cipherText, al) {\r\n\t\tvar buffer = forge.util.createBuffer();\r\n\t\tbuffer.putBytes(encodededProtectedHeader);\r\n\t\tbuffer.putBytes(initializationVector);\r\n\t\tbuffer.putBytes(cipherText);\r\n\t\tbuffer.putBytes(al);\r\n\r\n\t\tvar hmacInput = buffer.bytes();\r\n\r\n\t\tvar hmac = forge.hmac.create();\r\n\t\thmac.start(forge.sha512.create(), macKey);\r\n\t\thmac.update(hmacInput);\r\n\t\treturn hmac.digest().bytes();\r\n\t};\r\n\r\n\tvar JOSEEncryptor = function() {\r\n\r\n\t\tthis.encrypt = function(plainTextValues, publicKeyResponse) {\r\n\t\t\t// Create protected header and encode it with Base64 encoding\r\n\t\t\tvar payload = JSON.stringify(plainTextValues);\r\n\t\t\tvar protectedHeader = createProtectedHeader(publicKeyResponse.keyId);\r\n\t\t\tvar encodededProtectedHeader = base64UrlEncode(protectedHeader);\r\n\r\n\t\t\t// Create ContentEncryptionKey, is a random byte[]\r\n\t\t\tvar CEK = forge.random.getBytesSync(CEKKEYLENGTH / 8);\r\n\t\t\tvar publicKey = decodePemPublicKey(publicKeyResponse.publicKey);\r\n\r\n\t\t\t// Encrypt the contentEncryptionKey with the GC gateway publickey and encode it with Base64 encoding\r\n\t\t\tvar encryptedContentEncryptionKey = encryptContentEncryptionKey(CEK, publicKey);\r\n\t\t\tvar encodedEncryptedContentEncryptionKey = base64UrlEncode(encryptedContentEncryptionKey);\r\n\r\n\t\t\t// Split the contentEncryptionKey in ENC_KEY and MAC_KEY for using hmac\r\n\t\t\tvar macKey = CEK.substring(0, CEKKEYLENGTH / 2 / 8);\r\n\t\t\tvar encKey = CEK.substring(CEKKEYLENGTH / 2 / 8);\r\n\r\n\t\t\t// Create Initialization Vector\r\n\t\t\tvar initializationVector = forge.random.getBytesSync(IVLENGTH / 8);\r\n\t\t\tvar encodededinitializationVector = base64UrlEncode(initializationVector);\r\n\r\n\t\t\t// Encrypt content with ContentEncryptionKey and Initialization Vector\r\n\t\t\tvar cipherText = encryptPayload(payload, encKey, initializationVector);\r\n\t\t\tvar encodedCipherText = base64UrlEncode(cipherText);\r\n\r\n\t\t\t// Create Additional Authenticated Data  and Additional Authenticated Data Length\r\n\t\t\tvar al = calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader);\r\n\r\n\t\t\t// Calculates HMAC\r\n\t\t\tvar calculatedHmac = calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al);\r\n\r\n\t\t\t// Truncate HMAC Value to Create Authentication Tag\r\n\t\t\tvar authenticationTag = calculatedHmac.substring(0, calculatedHmac.length / 2);\r\n\t\t\tvar encodedAuthenticationTag = base64UrlEncode(authenticationTag);\r\n\r\n\t\t\treturn encodededProtectedHeader + \".\" + encodedEncryptedContentEncryptionKey + \".\" + encodededinitializationVector + \".\" + encodedCipherText + \".\" + encodedAuthenticationTag;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.JOSEEncryptor = JOSEEncryptor;\r\n\treturn JOSEEncryptor;\r\n});","define(\"connectsdk.Encryptor\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.JOSEEncryptor\"], function(connectsdk, Promise, JOSEEncryptor) {\r\n\r\n\tvar Encryptor = function(publicKeyResponsePromise) {\r\n\t\tthis.encrypt = function(paymentRequest) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar encryptedString = '';\r\n\t\t\tpublicKeyResponsePromise.then(function (publicKeyResponse) {\r\n\t\t\t\tif (paymentRequest.isValid()) {\r\n\t\t\t\t    \r\n\t\t\t\t\tvar blob = {\r\n\t\t\t\t\t   clientSessionId: paymentRequest.getClientSessionID()\r\n\t\t\t\t\t   ,nonce: forge.util.bytesToHex(forge.random.getBytesSync(16))\r\n\t\t\t\t\t   ,paymentProductId: paymentRequest.getPaymentProduct().id\r\n                       ,tokenize: paymentRequest.getTokenize()\r\n                    };\r\n                    \r\n\t\t\t\t\tif (paymentRequest.getAccountOnFile()) {\r\n                        blob[\"accountOnFileId\"] = paymentRequest.getAccountOnFile().id;\r\n                    }\r\n                    \r\n                    var paymentValues = [], values = paymentRequest.getUnmaskedValues();\r\n                    var ownValues = Object.getOwnPropertyNames(values);\r\n\t\t\t\t\tfor (var i = 0; i < ownValues.length; i++) {\r\n\t\t\t\t\t\tvar propertyName = ownValues[i];\r\n\t\t\t\t\t\tif (propertyName !== \"length\") {\r\n\t\t\t\t\t\t\tpaymentValues.push({\r\n\t\t\t\t\t\t\t\tkey: propertyName,\r\n\t\t\t\t\t\t\t\tvalue: values[propertyName]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    blob[\"paymentValues\"] = paymentValues;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// use blob to encrypt\r\n\t\t\t\t\tvar joseEncryptor = new JOSEEncryptor();\r\n\t\t\t\t\tencryptedString = joseEncryptor.encrypt(blob, publicKeyResponse);\r\n\t\t\t\t\tpromise.resolve(encryptedString);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpromise.reject(paymentRequest.getErrorMessageIds());\r\n\t\t\t\t}\r\n\t\t\t}, function (error) {\r\n\t\t\t\tpromise.reject(error);\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.Encryptor = Encryptor;\r\n\treturn Encryptor;\r\n});","define(\"connectsdk.Session\", [\"connectsdk.core\", \"connectsdk.C2SCommunicator\", \"connectsdk.C2SCommunicatorConfiguration\", \"connectsdk.IinDetailsResponse\", \"connectsdk.promise\", \"connectsdk.C2SPaymentProductContext\", \"connectsdk.BasicPaymentProducts\", \"connectsdk.BasicPaymentProductGroups\", \"connectsdk.PaymentProduct\", \"connectsdk.PaymentProductGroup\", \"connectsdk.BasicPaymentItems\", \"connectsdk.PaymentRequest\", \"connectsdk.Encryptor\"], function(connectsdk, C2SCommunicator, C2SCommunicatorConfiguration, IinDetailsResponse, Promise, C2SPaymentProductContext, BasicPaymentProducts, BasicPaymentProductGroups, PaymentProduct, PaymentProductGroup, BasicPaymentItems, PaymentRequest, Encryptor) {\r\n\r\n\tvar session = function (sessionDetails, paymentProduct) {\r\n\r\n\t\tvar _c2SCommunicatorConfiguration = new C2SCommunicatorConfiguration(sessionDetails)\r\n\t\t\t,_c2sCommunicator = new C2SCommunicator(_c2SCommunicatorConfiguration, paymentProduct)\r\n\t\t\t,_paymentProductId, _paymentProduct, _paymentRequestPayload, _paymentRequest, _paymentProductGroupId, _paymentProductGroup, _session = this;\r\n\t\tthis.apiBaseUrl = _c2SCommunicatorConfiguration.apiBaseUrl;\r\n\t\tthis.assetsBaseUrl = _c2SCommunicatorConfiguration.assetsBaseUrl;\r\n\r\n\t\tthis.getBasicPaymentProducts = function(paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProducts(c2SPaymentProductContext).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProducts = new BasicPaymentProducts(json);\r\n\t\t\t\tpromise.resolve(paymentProducts);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function(paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProductGroups(c2SPaymentProductContext).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProductGroups = new BasicPaymentProductGroups(json);\r\n\t\t\t\tpromise.resolve(paymentProductGroups);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentItems = function(paymentRequestPayload, useGroups) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t// get products & groups\r\n\t\t\tif (useGroups) {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload).then(function (products) {\r\n\t\t\t\t\t_session.getBasicPaymentProductGroups(paymentRequestPayload).then(function (groups) {\r\n\t\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, groups);\r\n\t\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload).then(function (products) {\r\n\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, null);\r\n\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function(paymentProductId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductId = paymentProductId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProduct(paymentProductId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentProduct = new PaymentProduct(response);\r\n\t\t\t\tpromise.resolve(_paymentProduct);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProduct = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function(paymentProductGroupId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductGroupId = paymentProductGroupId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductGroup(paymentProductGroupId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentProductGroup = new PaymentProductGroup(response);\r\n\t\t\t\tpromise.resolve(_paymentProductGroup);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProductGroup = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getIinDetails = function (partialCreditCardNumber, paymentRequestPayload) {\r\n\t\t\tpartialCreditCardNumber = partialCreditCardNumber.replace(/ /g, '').substring(0,6);\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\treturn _c2sCommunicator.getPaymentProductIdByCreditCardNumber(partialCreditCardNumber, c2SPaymentProductContext);\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\treturn _c2sCommunicator.getPublicKey();\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\treturn _c2sCommunicator.getPaymentProductDirectory(paymentProductId, currencyCode, countryCode);\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\treturn _c2sCommunicator.convertAmount(amount, source, target);\r\n\t\t};\r\n\r\n\t\tthis.getPaymentRequest = function () {\r\n\t\t\tif (!_paymentRequest) {\r\n\t\t\t\t_paymentRequest = new PaymentRequest(sessionDetails.clientSessionID);\r\n\r\n\t\t\t}\r\n\t\t\treturn _paymentRequest;\r\n\t\t};\r\n\r\n\t\tthis.getEncryptor = function () {\r\n\t\t\tvar publicKeyResponsePromise = _c2sCommunicator.getPublicKey();\r\n\t\t\treturn new Encryptor(publicKeyResponsePromise);\r\n\t\t};\r\n\t};\r\n\tconnectsdk.Session = session;\r\n\treturn session;\r\n});"],"sourceRoot":"/source/"}